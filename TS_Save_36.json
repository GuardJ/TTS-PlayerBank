{
  "SaveName": "the project",
  "GameMode": "Custom UI Example",
  "Gravity": 0.5,
  "PlayArea": 0.5,
  "Date": "7/4/2019 6:17:28 PM",
  "Table": "Table_RPG",
  "Sky": "Sky_Field",
  "Note": "{-1.278,0.1,-0.495}",
  "Rules": "",
  "XmlUI": "<!-- Welcome popup -->\r\n\r\n<Panel\r\n    id=\"Scoreboard\"\r\n    height=\"400\"\r\n    width=\"470\"\r\n    color=\"rgba(0,0,0,0.5)\"\r\n    rectAlignment=\"UpperRight\"\r\n    offsetXY=\"-160 0\"\r\n    hideAnimation=\"FadeOut\"\r\n    showAnimation=\"FadeIn\"\r\n    animationDuration=\"0.9\"\r\n    allowDragging=\"true\"\r\n    returnToOriginalPositionWhenReleased=\"false\"\r\n    >\r\n    <InputField\r\n        id=\"Scoreboard-StartingMoneyInput\"\r\n        text=\"$\"\r\n        >\r\n    </InputField>\r\n    <Text\r\n        id=\"Scoreboard-text\"\r\n        text=\"Test\"\r\n        color=\"red\"\r\n        outline=\"black\"\r\n        outlineSize=\"2 2\"\r\n        alignment=\"LowerCenter\"\r\n        fontSize=\"50\"\r\n        >\r\n    </Text>\r\n    <TableLayout class=\"noCellBackground\" height=\"512\" width=\"512\" rectAlignment=\"MiddleCenter\" offsetXY=\"0 0\">\r\n    <Row class=\"viewport\">\r\n      <Cell dontUseTableCellBackground=\"true\">\r\n          <TableLayout cellPadding=\"7\" padding=\"20\" cellSpacing=\"5\" cellBackgroundImage=\"Sprites/Outline_Sharp\" cellBackgroundColor=\"rgba(1,1,0,0.125)\" autoCalculateHeight=\"1\" columnWidths=\"180 0\">\r\n            <Row id=\"test-row\" preferredHeight=\"44\">\r\n              <Cell>\r\n                <Text class=\"h3\">Input Field1</Text>\r\n              </Cell>\r\n              <Cell>\r\n                <InputField />\r\n              </Cell>\r\n            </Row>\r\n          </TableLayout>\r\n      </Cell>\r\n    </Row>\r\n    </TableLayout>\r\n    <TableLayout class=\"noCellBackground\" height=\"512\" width=\"512\" rectAlignment=\"MiddleCenter\" offsetXY=\"0 0\">\r\n    <Row class=\"viewport\">\r\n      <Cell dontUseTableCellBackground=\"true\">\r\n          <TableLayout cellPadding=\"7\" padding=\"20\" cellSpacing=\"5\" cellBackgroundImage=\"Sprites/Outline_Sharp\" cellBackgroundColor=\"rgba(1,1,0,0.125)\" autoCalculateHeight=\"1\" columnWidths=\"180 0\">\r\n\r\n            <Row class=\"sectionHeaderRow\">\r\n              <Cell columnSpan=\"2\" dontUseTableCellBackground=\"1\">\r\n                <Text class=\"h2\" alignment=\"MiddleCenter\">Input Elements</Text>\r\n              </Cell>\r\n            </Row>\r\n            <Row preferredHeight=\"44\">\r\n              <Cell>\r\n                <Text class=\"h3\">Input Field2</Text>\r\n              </Cell>\r\n              <Cell>\r\n                <InputField />\r\n              </Cell>\r\n            </Row>\r\n          </TableLayout>\r\n      </Cell>\r\n    </Row>\r\n    </TableLayout>\r\n</Panel>\r\n<Panel\r\n    id=\"scoreboard-open-close\"\r\n    height=\"20\"\r\n    width=\"160\"\r\n    color=\"rgba(0,0,0,1)\"\r\n    rectAlignment=\"UpperRight\"\r\n    offsetXY=\"-310 0\"\r\n    hideAnimation=\"FadeOut\"\r\n    animationDuration=\"0.5\"\r\n    allowDragging=\"true\"\r\n    returnToOriginalPositionWhenReleased=\"false\"\r\n    >\r\n    <Text\r\n        text=\"SCOREBOARD\"\r\n        color=\"white\"\r\n        outline=\"black\"\r\n        outlineSize=\"2 2\"\r\n        alignment=\"Center\"\r\n        fontSize=\"15\"\r\n        >\r\n    </Text>\r\n    <Button\r\n        onClick=\"hideScoreboard\"\r\n        height=\"20\"\r\n        width=\"20\"\r\n        color=\"rgba(0,0,0,0.7)\"\r\n        text=\"&#8896;\"\r\n        textColor=\"rgba(1,1,1,0.9)\"\r\n        fontStyle=\"Bold\"\r\n        fontSize=\"15\"\r\n        rectAlignment=\"UpperRight\"\r\n        >\r\n    </Button>\r\n    <Button\r\n        onClick=\"showScoreboard\"\r\n        height=\"20\"\r\n        width=\"20\"\r\n        color=\"rgba(0,0,0,0.7)\"\r\n        text=\"&#8897;\"\r\n        textColor=\"rgba(1,1,1,0.9)\"\r\n        fontStyle=\"Bold\"\r\n        fontSize=\"15\"\r\n        rectAlignment=\"UpperLeft\"\r\n        >\r\n    </Button>\r\n</Panel>",
  "CustomUIAssets": [
    {
      "Name": "TTSLogo",
      "URL": "http://cloud-3.steamusercontent.com/ugc/936064212973557569/9D9F00D3BAEB906B3393649C931267AB6F24D915/"
    }
  ],
  "LuaScript": "function onLoad()\n\nend\n\nstartingMoney = 3200\nbankP1 = startingMoney\nbankP2 = startingMoney\n\nbroadcastToAll(playerBankBalance)\n\nfunction getStartingMoney()\n    return startingMoney\nend\n\nfunction nothing()\n    object1 = getObjectFromGUID('341c7c')\n    object1.call('start')\nend\n\nfunction moneyPayPlayer(pA, pB)\n    --ref pA bank\n    --ref PB bank\n    --pA enters ammount to pay pB\n    --PA confirms payment\n    --calculate transaction\n    --update banks\nend\n\nfunction moneyRequest(pA, pB)\n    --ref pA bank\n    --ref PB bank\n    --pA enters ammount to request from pB\n    --pB confirms request payment\n    --calculate transaction\n    --update banks\nend\n\nfunction moneyPayAll(pA)\n    --ref pA bank\n    --ref all other players bank except pA\n    --pA enter ammount x1\n    --pA confirms payment X to each player / total payment\n    --calculate transaction\n    --update banks\nend\n\nfunction moneyBuy()\n    --ref pA bank\n    --??? ref item price ???\n    --or pA enter ammount to charge to pA bank\n    --calculate charge to pA bank\n    --update pA bank only\nend\n\nfunction moneyPayPool(a)\n    --ref pA bank\n    --??? ref item price ???\n    --or pA enter ammount to charge to pA bank\n    --calculate charge to pA bank\n    --update pA bank only\nend\n\nfunction moneyClaimPool()\n    --ref pA bank\n    --ref Pool bank\n    --pA confirms claim\n    --calculate transaction\n    --update banks\nend\n\n\nfunction testFunc()\n    UI.hide(\"test-row\")\nend\n\n--Hides the Scoreboard\nfunction hideScoreboard()\n    UI.hide(\"Scoreboard\")\nend\n\nfunction showScoreboard()\n    UI.show(\"Scoreboard\")\nend\n\n--[=====[\nfunction announcePlayers()\n    --this uses the existing textTools GUID to get Object ref for each\n    textTools_GUID={\"122fb8\", \"9421ac\", \"8cbee2\", \"ba516b\",\n                    \"bf78b6\", \"562124\", \"9c997c\", \"e80c0c\"}\n    textTools = {}\n    for _, tool_GUID in pairs(textTools_GUID) do\n        textTools[_] = getObjectFromGUID(tool_GUID)\n    end\n\n    --this gets only seated players into a list\n    --then uses player ref to update texttool accordingly\n    players = getSeatedPlayers()\n    playerCount = #players\n    for _, playerReference in ipairs(players) do\n            textTools[_].setValue(Player[players[_]].steam_name)\n            textTools[_].TextTool.setFontColor(Player[players[_]].color)\n    end\nend\n--]=====]",
  "LuaScriptState": "{\"rt\":true}",
  "Grid": {
    "Type": 0,
    "Lines": false,
    "Color": {
      "r": 0.0,
      "g": 0.0,
      "b": 0.0
    },
    "Opacity": 0.75,
    "ThickLines": false,
    "Snapping": false,
    "Offset": false,
    "BothSnapping": false,
    "xSize": 2.0,
    "ySize": 2.0,
    "PosOffset": {
      "x": 0.0,
      "y": 1.0,
      "z": 0.0
    }
  },
  "Lighting": {
    "LightIntensity": 0.54,
    "LightColor": {
      "r": 1.0,
      "g": 0.9804,
      "b": 0.8902
    },
    "AmbientIntensity": 1.3,
    "AmbientType": 0,
    "AmbientSkyColor": {
      "r": 0.5,
      "g": 0.5,
      "b": 0.5
    },
    "AmbientEquatorColor": {
      "r": 0.5,
      "g": 0.5,
      "b": 0.5
    },
    "AmbientGroundColor": {
      "r": 0.5,
      "g": 0.5,
      "b": 0.5
    },
    "ReflectionIntensity": 1.0,
    "LutIndex": 0,
    "LutContribution": 1.0
  },
  "Hands": {
    "Enable": true,
    "DisableUnused": false,
    "Hiding": 0,
    "HandTransforms": [
      {
        "Color": "Red",
        "Transform": {
          "posX": -15.1108065,
          "posY": 6.15017271,
          "posZ": -20.1076221,
          "rotX": 0.0,
          "rotY": 0.0,
          "rotZ": 0.0,
          "scaleX": 11.7839184,
          "scaleY": 9.174497,
          "scaleZ": 4.87123871
        }
      },
      {
        "Color": "Yellow",
        "Transform": {
          "posX": -30.2150211,
          "posY": 6.15017271,
          "posZ": 10.17524,
          "rotX": 0.0,
          "rotY": 90.0,
          "rotZ": 0.0,
          "scaleX": 11.73615,
          "scaleY": 9.174497,
          "scaleZ": 4.965378
        }
      },
      {
        "Color": "Purple",
        "Transform": {
          "posX": 30.25128,
          "posY": 6.15017271,
          "posZ": 9.59069252,
          "rotX": 0.0,
          "rotY": 270.0,
          "rotZ": 0.0,
          "scaleX": 11.7361431,
          "scaleY": 9.174497,
          "scaleZ": 4.965378
        }
      },
      {
        "Color": "Blue",
        "Transform": {
          "posX": 15.4749184,
          "posY": 6.15017271,
          "posZ": 19.8365288,
          "rotX": 0.0,
          "rotY": 179.8,
          "rotZ": 0.0,
          "scaleX": 11.891427,
          "scaleY": 9.174497,
          "scaleZ": 4.9236207
        }
      },
      {
        "Color": "White",
        "Transform": {
          "posX": 15.1961479,
          "posY": 6.15017271,
          "posZ": -20.1400986,
          "rotX": 0.0,
          "rotY": 0.0,
          "rotZ": 0.0,
          "scaleX": 11.7839012,
          "scaleY": 9.17449951,
          "scaleZ": 4.87123871
        }
      },
      {
        "Color": "Green",
        "Transform": {
          "posX": -15.1927767,
          "posY": 6.15017271,
          "posZ": 19.787817,
          "rotX": 0.0,
          "rotY": 180.0,
          "rotZ": 0.0,
          "scaleX": 11.7839012,
          "scaleY": 9.174497,
          "scaleZ": 4.87123871
        }
      },
      {
        "Color": "Pink",
        "Transform": {
          "posX": 30.10358,
          "posY": 6.15017271,
          "posZ": -8.449126,
          "rotX": 0.0,
          "rotY": 270.0,
          "rotZ": 0.0,
          "scaleX": 11.73614,
          "scaleY": 9.174497,
          "scaleZ": 4.965378
        }
      },
      {
        "Color": "Orange",
        "Transform": {
          "posX": -30.247818,
          "posY": 6.15017271,
          "posZ": -8.822588,
          "rotX": 0.0,
          "rotY": 90.0,
          "rotZ": 0.0,
          "scaleX": 11.7361536,
          "scaleY": 9.174497,
          "scaleZ": 4.965378
        }
      }
    ]
  },
  "Turns": {
    "Enable": false,
    "Type": 0,
    "TurnOrder": [],
    "Reverse": false,
    "SkipEmpty": false,
    "DisableInteractions": false,
    "PassTurns": true,
    "TurnColor": ""
  },
  "VectorLines": [
    {
      "points3": [
        {
          "x": 17.001482,
          "y": 0.9711354,
          "z": 1.68818271
        },
        {
          "x": 23.5268688,
          "y": 0.971135139,
          "z": 1.68112385
        },
        {
          "x": 23.517601,
          "y": 0.9711342,
          "z": -6.88674259
        },
        {
          "x": 16.9922142,
          "y": 0.9711342,
          "z": -6.87968349
        }
      ],
      "color": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "thickness": 0.1,
      "loop": true
    },
    {
      "points3": [
        {
          "x": -6.791662,
          "y": 0.971133232,
          "z": -12.3725548
        },
        {
          "x": -6.791662,
          "y": 0.971133232,
          "z": -12.3725548
        },
        {
          "x": -6.791662,
          "y": 0.971133232,
          "z": -12.3725548
        },
        {
          "x": -6.791662,
          "y": 0.971133232,
          "z": -12.3725548
        }
      ],
      "color": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "thickness": 0.1,
      "loop": true
    },
    {
      "points3": [
        {
          "x": 20.4030952,
          "y": 0.9711342,
          "z": -9.897056
        },
        {
          "x": 20.4030952,
          "y": 0.9711342,
          "z": -9.897056
        },
        {
          "x": 20.4030952,
          "y": 0.9711342,
          "z": -9.897056
        },
        {
          "x": 20.4030952,
          "y": 0.9711342,
          "z": -9.897056
        }
      ],
      "color": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "thickness": 0.1,
      "loop": true
    },
    {
      "points3": [
        {
          "x": 14.3030081,
          "y": 0.9711356,
          "z": 3.720791
        },
        {
          "x": 14.3030081,
          "y": 0.9711356,
          "z": 3.720791
        },
        {
          "x": 14.3030081,
          "y": 0.9711356,
          "z": 3.720791
        },
        {
          "x": 14.3030081,
          "y": 0.9711356,
          "z": 3.720791
        }
      ],
      "color": {
        "r": 0.856,
        "g": 0.1,
        "b": 0.094
      },
      "thickness": 0.1,
      "loop": true
    }
  ],
  "ObjectStates": [
    {
      "Name": "Custom_Token",
      "Transform": {
        "posX": 5.424223,
        "posY": 2.067062,
        "posZ": -1.77292669,
        "rotX": -3.503804E-06,
        "rotY": 180.0,
        "rotZ": -5.983372E-06,
        "scaleX": 2.548663,
        "scaleY": 1.0,
        "scaleZ": 2.548663
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "https://d.grancypher.xyz/black-877e425b.png",
        "ImageSecondaryURL": "",
        "WidthScale": 0.0,
        "CustomToken": {
          "Thickness": 0.200000048,
          "MergeDistancePixels": 15.0,
          "Stackable": false
        }
      },
      "XmlUI": "",
      "LuaScript": "function onSave()\r\n\r\nend\r\n\r\nfunction onload(saved_data)\r\n    --self.createButton(test)\r\n    do --Start Create Buttons\r\n        --button order here determines its index? starting at index 0\r\n        self.createButton(b_display)\r\n        self.createButton(b_miniDisplay)\r\n\r\n        self.createButton(b_PayPlayer)\r\n        self.createButton(b_Request)\r\n        self.createButton(b_PayAll)\r\n\r\n        self.createButton(b_white)\r\n        self.createButton(b_red)\r\n        self.createButton(b_orange)\r\n        self.createButton(b_yellow)\r\n        self.createButton(b_green)\r\n        self.createButton(b_blue)\r\n        self.createButton(b_purple)\r\n        self.createButton(b_pink)\r\n\r\n        self.createButton(b_b0)\r\n        self.createButton(b_b1)\r\n        self.createButton(b_b2)\r\n        self.createButton(b_b3)\r\n        self.createButton(b_b4)\r\n        self.createButton(b_b5)\r\n        self.createButton(b_b6)\r\n        self.createButton(b_b7)\r\n        self.createButton(b_b8)\r\n        self.createButton(b_b9)\r\n        self.createButton(b_reset)\r\n        self.createButton(b_colorReset)\r\n    end --End Create Buttons\r\n\r\n    getStartingMoney()\r\nend\r\n\r\n--[=====[\r\n    copy/paste for comment block\r\n--]=====]\r\n\r\n--this gets updated with global startingMoney upon this objects OnLoad\r\n--using getStartingMoney\r\nplayerBankBalance = 0\r\n\r\n\r\nfunction getStartingMoney()\r\n    playerBankBalance = Global.call('getStartingMoney')\r\n    b_display.label = '$'..playerBankBalance\r\n    self.editButton(b_display) --updates index 0 button?\r\nend\r\n\r\nfunction none()\r\n    --placeholder\r\nend\r\n\r\nfunction moneyPayPlayer()\r\n    --ref PB bank\r\n    --getPlayerGUID()\r\n\r\n    --pA enters ammount to pay pB\r\n    --some input from keypad\r\n\r\n    --PA confirms payment\r\nend\r\n\r\nfunction clear()\r\n    newValue = ''\r\n    b_miniDisplay.label = newValue\r\n    self.editButton({index=1, label=newValue})\r\n    --operator = ''\r\n    --designatedPlayer = 0\r\nend\r\n\r\nfunction p(color, button)\r\n\r\n    buttonsColors = {b_white,b_red,b_orange,b_yellow,b_green,b_blue,b_purple,b_pink}\r\n    posOriginals = {}\r\n\r\n    colorsHide(button)\r\n\r\n--[===[\r\n    for _, buttonColor in pairs(buttonsColors) do\r\n        posCurrent = buttonsColors[_].position\r\n        posOriginals[_] = posCurrent\r\n        posHidden = {posCurrent[1], 0, posCurrent[3]}\r\n\r\n        buttonsColors[_].position = posHidden\r\n        buttonsColors[_].rotation = {180,0,0}\r\n        self.editButton({index=_+1, position=posHidden, rotation={180,0,0}})\r\n    end\r\n\r\n    b_miniDisplay.color = button.color\r\n    self.editButton({index=1,color=button.color})\r\n\r\n    miniShow()\r\n--]===]\r\n\r\n-----------------------vvvvvvvvvvvvv\r\n--[=====[\r\n    for _, buttonColor in pairs(buttonsColors) do\r\n        buttonsColors[_].position = posOriginals[_]\r\n        x = posOriginals[_][1]\r\n        z = posOriginals[_][2]\r\n        y = posOriginals[_][3]\r\n        buttonsColors[_].rotation = {0,0,0}\r\n        self.editButton({index=_+1, position={x,z,y}, rotation={0,0,0}})\r\n    end\r\n\r\n\r\n    miniHide()\r\n--]=====]\r\nend\r\n\r\ndo --Color Buttons Relay\r\n    function white() p('White',b_white) end function red() p('Red',b_red) end function orange() p('Orange',b_orange) end function yellow() p('Yellow',b_yellow) end\r\n    function green() p('Green', b_green) end function blue() p('Blue',b_blue) end function purple() p('Purple',b_purple) end function pink() p('Pink',b_pink) end\r\nend --Color Buttons Relay\r\n\r\ndo --NumPad Display Interaction\r\n    function b0() b('0') end function b1() b('1') end function b2() b('2') end\r\n    function b3() b('3') end function b4() b('4') end function b5() b('5') end\r\n    function b6() b('6') end function b7() b('7') end function b8() b('8') end\r\n    function b9() b('9') end\r\n    function br() entryZero() end\r\n\r\n    function b(n)\r\n        checkZero()\r\n        b_miniDisplay.label = b_miniDisplay.label .. n\r\n        newValue = b_miniDisplay.label\r\n        self.editButton({index=1, label=newValue})\r\n    end\r\n\r\n    function checkZero()\r\n        value = b_miniDisplay.label\r\n        if value == \"$0\" then\r\n            b_miniDisplay.label = \"$\"\r\n        end\r\n    end\r\n\r\n    function entryZero()\r\n        newValue = \"$0\"\r\n        b_miniDisplay.label = '$'\r\n        b_miniDisplay.click_function = 'clear'\r\n        self.editButton({index=1, label=newValue})\r\n    end\r\nend --NumPad Display Interaction\r\n\r\nfunction cr()\r\n    colorsShow()\r\nend\r\n\r\nfunction colorsShow()\r\n    for _, buttonColor in pairs(buttonsColors) do\r\n        buttonsColors[_].position = posOriginals[_]\r\n        x = posOriginals[_][1]\r\n        z = posOriginals[_][2]\r\n        y = posOriginals[_][3]\r\n        buttonsColors[_].rotation = {0,0,0}\r\n        self.editButton({index=_+1, position={x,z,y}, rotation={0,0,0}})\r\n    end\r\n\r\n    miniHide()\r\nend\r\n\r\nfunction colorsHide(button)\r\n    for _, buttonColor in pairs(buttonsColors) do\r\n        posCurrent = buttonsColors[_].position\r\n        posOriginals[_] = posCurrent\r\n        posHidden = {posCurrent[1], 0, posCurrent[3]}\r\n\r\n        buttonsColors[_].position = posHidden\r\n        buttonsColors[_].rotation = {180,0,0}\r\n        self.editButton({index=_+1, position=posHidden, rotation={180,0,0}})\r\n    end\r\n\r\n    b_miniDisplay.color = button.color\r\n    self.editButton({index=1,color=button.color})\r\n\r\n    miniShow()\r\nend\r\n\r\nfunction miniShow()\r\n    posMiniShow = {pos00[1]-0, pos00[2], pos00[3]+0.3}\r\n    rotMiniShow = {0,0,0}\r\n    b_miniDisplay.position = posMiniShow\r\n    self.editButton({index=1, position=posMiniShow, rotation=rotMiniShow})\r\nend\r\nfunction miniHide()\r\n    posMiniHide = {pos00[1]-0, 0, pos00[3]+0.3}\r\n    rotMiniHide = {180,0,0}\r\n    b_miniDisplay.position = posMiniHide\r\n    self.editButton({index=1, position=posMiniHide, rotation=rotMiniHide})\r\nend\r\n\r\n\r\n--Positions are {x,z,y}\r\npos00 = {0,0.1,-1}   --Origin for DISPLAY\r\ndo --Start Display Parameters\r\n    b_display = {\r\n        index=0, label='$---',\r\n        click_function='none', function_owner=self,\r\n        position={pos00[1]-0, pos00[2], pos00[3]-0},\r\n        width=700, height=100, font_size=100,\r\n        color={1,1,1}\r\n    }\r\n    b_miniDisplay = {\r\n        index=0, label='$0',\r\n        click_function='none', function_owner=self,\r\n        position={pos00[1]-0, pos00[2]-pos00[2], pos00[3]+0.3},\r\n        rotation={180,0,0},\r\n        width=300, height=100, font_size=70,\r\n        color={1,1,1}\r\n    }\r\nend --End Display Parameters\r\n\r\npos08 = {1,0.1,-0.5} --Origin For Color Buttons\r\ndo --Start Color Button Parameters\r\n    b_white = {\r\n        click_function='white', function_owner=self,\r\n        position={pos08[1]-0.3, pos08[2], pos08[3]-0.1}, width=100, height=100,\r\n        color={1, 1, 1}\r\n    }\r\n\r\n    b_red = {\r\n        click_function='red', function_owner=self,\r\n        position={pos08[1]-0.1, pos08[2], pos08[3]-0.1}, width=100, height=100,\r\n        color={0.856, 0.1, 0.094}\r\n    }\r\n\r\n    b_orange = {\r\n        click_function='orange', function_owner=self,\r\n        position={pos08[1]+0.1, pos08[2], pos08[3]-0.1}, width=100, height=100,\r\n        color={0.956, 0.392, 0.113}\r\n    }\r\n\r\n    b_yellow = {\r\n        click_function='yellow', function_owner=self,\r\n        position={pos08[1]+0.3, pos08[2], pos08[3]-0.1}, width=100, height=100,\r\n        color={0.905, 0.898, 0.172}\r\n    }\r\n    ---------------------------\r\n    b_green = {\r\n        click_function='green', function_owner=self,\r\n        position={pos08[1]-0.3, pos08[2], pos08[3]+0.1}, width=100, height=100,\r\n        color={0.192, 0.701, 0.168}\r\n    }\r\n\r\n    b_blue = {\r\n        click_function='blue', function_owner=self,\r\n        position={pos08[1]-0.1, pos08[2], pos08[3]+0.1}, width=100, height=100,\r\n        color={0.118, 0.53, 1}\r\n    }\r\n\r\n    b_purple = {\r\n        click_function='purple', function_owner=self,\r\n        position={pos08[1]+0.1, pos08[2], pos08[3]+0.1}, width=100, height=100,\r\n        color={0.627, 0.125, 0.941}\r\n    }\r\n\r\n    b_pink = {\r\n        click_function='pink', function_owner=self,\r\n        position={pos08[1]+0.3, pos08[2], pos08[3]+0.1}, width=100, height=100,\r\n        color={0.96, 0.439, 0.807}\r\n    }\r\nend --End Color Button Parameters\r\n\r\n\r\npos09 = {0,0.1,0.3}  --Origin For NumPad Buttons\r\ndo --Start NumPad Button Parameters\r\n    b_b0 = {\r\n        label='0', click_function='b0', function_owner=self,\r\n        width=100, height=100, font_size=60,\r\n        position={pos09[1]+ 0 ,pos09[2]+ 0 ,pos09[3]+ 0 },\r\n        rotation={0,0,0}\r\n    }\r\n    b_b1 = {\r\n        label='1', click_function='b1', function_owner=self,\r\n        width=100, height=100, font_size=60,\r\n        position={pos09[1]+ (-0.2) ,pos09[2]+ 0 ,pos09[3]+ (-0.2) }\r\n    }\r\n    b_b2 = {\r\n        label='2', click_function='b2', function_owner=self,\r\n        width=100, height=100, font_size=60,\r\n        position={pos09[1]+ 0 ,pos09[2]+ 0 ,pos09[3]+ (-0.2) }\r\n    }\r\n    b_b3 = {\r\n        label='3', click_function='b3', function_owner=self,\r\n        width=100, height=100, font_size=60,\r\n        position={pos09[1]+ (0.2) ,pos09[2]+ 0 ,pos09[3]+ (-0.2) }\r\n    }\r\n    b_b4 = {\r\n        label='4', click_function='b4', function_owner=self,\r\n        width=100, height=100, font_size=60,\r\n        position={pos09[1]+ (-0.2) ,pos09[2]+ 0 ,pos09[3]+ (-0.4) }\r\n    }\r\n    b_b5 = {\r\n\r\n        label='5', click_function='b5', function_owner=self,\r\n        width=100, height=100, font_size=60,\r\n        position={pos09[1]+ 0 ,pos09[2]+ 0 ,pos09[3]+ (-0.4) }\r\n    }\r\n    b_b6 = {\r\n        label='6', click_function='b6', function_owner=self,\r\n        width=100, height=100, font_size=60,\r\n        position={pos09[1]+ (0.2) ,pos09[2]+ 0 ,pos09[3]+ (-0.4) }\r\n    }\r\n    b_b7 = {\r\n        label='7', click_function='b7', function_owner=self,\r\n        width=100, height=100, font_size=60,\r\n        position={pos09[1]+ (-0.2) ,pos09[2]+ 0 ,pos09[3]+ (-0.6) }\r\n    }\r\n    b_b8 = {\r\n        label='8', click_function='b8', function_owner=self,\r\n        width=100, height=100, font_size=60,\r\n        position={pos09[1]+ 0 ,pos09[2]+ 0 ,pos09[3]+ (-0.6) }\r\n    }\r\n    b_b9 = {\r\n        label='9', click_function='b9', function_owner=self,\r\n        width=100, height=100, font_size=60,\r\n        position={pos09[1]+ (0.2) ,pos09[2]+ 0 ,pos09[3]+ (-0.6) }\r\n    }\r\n    b_reset = {\r\n        label='$0', click_function='br', function_owner=self,\r\n        width=100, height=100, font_size=60,\r\n        position={pos09[1]+ (0.2) ,pos09[2]+ 0 ,pos09[3]+ (0) }\r\n    }\r\n    b_colorReset = {\r\n        label='C', click_function='cr', function_owner=self,\r\n        width=100, height=100, font_size=60,\r\n        position={pos09[1]+ (-0.2) ,pos09[2]+ 0 ,pos09[3]+ (0) }\r\n    }\r\nend --End NumPad Button Parameters\r\n",
      "LuaScriptState": "",
      "GUID": "960882"
    },
    {
      "Name": "Custom_Token",
      "Transform": {
        "posX": 2.165977,
        "posY": 2.217061,
        "posZ": -0.512449741,
        "rotX": 4.95659651E-06,
        "rotY": 180.010437,
        "rotZ": -1.772887E-05,
        "scaleX": 0.628697336,
        "scaleY": 1.0,
        "scaleZ": 0.628697336
      },
      "Nickname": "Position Helper",
      "Description": "1) Place over top of the character sheet\n2) In the notes (lower right of screen) a position will be printed. Hilight + copy it\n3) Paste that into the Character Sheet script for the given button type you want.",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "http://cloud-3.steamusercontent.com/ugc/868487510161795580/F4E8EBB1FB4F6E5B05FB40F7F6DD1D8B3FAD7F52/",
        "ImageSecondaryURL": "",
        "WidthScale": 0.0,
        "CustomToken": {
          "Thickness": 0.1,
          "MergeDistancePixels": 14.77778,
          "Stackable": false
        }
      },
      "XmlUI": "",
      "LuaScript": "--This script is for the little position finder utility item\r\n--It is not part of the character sheet at all\r\n--This is not meant to be edited (unless, you know, you want to)\r\n\r\ndecimal = 3\r\n\r\nfunction onLoad()\r\n    sheet = getObjectFromGUID(\"960882\")\r\n    Timer.create({\r\n        identifier=\"localPosFinder\", function_name=\"updateLocalPos\",\r\n        function_owner=self, delay=1, repetitions=0,\r\n    })\r\nend\r\n\r\nfunction updateLocalPos()\r\n    if sheet == nil then\r\n        Timer.destroy(\"localPosFinder\")\r\n        return\r\n    end\r\n\r\n    local pos = sheet.positionToLocal(self.getPosition())\r\n    local note = \"{\"\r\n    note = note .. round(-pos.x) .. \",\"\r\n    note = note .. round(pos.y)-0.05 .. \",\"\r\n    note = note .. round(pos.z) .. \"}\"\r\n    setNotes(note)\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num)\r\n  local mult = 10^(decimal or 0)\r\n  return math.floor(num * mult + 0.5) / mult\r\nend",
      "LuaScriptState": "",
      "GUID": "937da9"
    },
    {
      "Name": "Custom_Token",
      "Transform": {
        "posX": 5.57929325,
        "posY": 1.06,
        "posZ": -11.7880239,
        "rotX": 2.04037931E-07,
        "rotY": 180.015747,
        "rotZ": -5.982351E-08,
        "scaleX": 2.548663,
        "scaleY": 1.0,
        "scaleZ": 2.548663
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/SnDxlxU.jpg",
        "ImageSecondaryURL": "",
        "WidthScale": 0.0,
        "CustomToken": {
          "Thickness": 0.2,
          "MergeDistancePixels": 15.0,
          "Stackable": false
        }
      },
      "XmlUI": "",
      "LuaScript": "function onSave()\r\n    if players then\r\n        local data_to_save = {ps=player_scores, p=players, pc=playersCount, m=memoryOn}\r\n        saved_data = JSON.encode(data_to_save)\r\n        return saved_data\r\n    end\r\nend\r\n\r\nfunction onload(saved_data)\r\n    self.createButton(b_display)\r\n    self.createButton(b_memory)\r\n    self.createButton(b_b0)\r\n    self.createButton(b_b1)\r\n    self.createButton(b_b2)\r\n    self.createButton(b_b3)\r\n    self.createButton(b_b4)\r\n    self.createButton(b_b5)\r\n    self.createButton(b_b6)\r\n    self.createButton(b_b7)\r\n    self.createButton(b_b8)\r\n    self.createButton(b_b9)\r\n    self.createButton(b_enter)\r\n    self.createButton(b_plus)\r\n    self.createButton(b_minus)\r\n    operator = ''\r\n\r\n    if saved_data != '' and saved_data != nil then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        if loaded_data.pc != nil and loaded_data.m == true then\r\n            printToAll('Scoreboard Data Loaded',{1,1,1})\r\n            player_scores = loaded_data.ps\r\n            players = loaded_data.p\r\n            playersCount = loaded_data.pc\r\n            --start timer\r\n            Timer.create({identifier='TD', function_name = 'timerDelay', delay=0.2})\r\n            for i=1, playersCount, 1 do\r\n                local tempName = Player[player_scores[i].color].steam_name\r\n                if tempName == nil then\r\n                    tempName = player_scores[i].color\r\n                else\r\n                    tempName = string.sub(tempName,1,8)\r\n                end\r\n                b_standings[i].label = tempName .. ': ' .. player_scores[i].score\r\n                self.createButton(b_standings[i])\r\n                b_standings[i].value = player_scores[i].score\r\n            end\r\n        else\r\n            player_scores = {}\r\n        end\r\n    else\r\n        player_scores = {}\r\n    end\r\n    memoryOn = true\r\nend\r\n\r\nfunction timerDelay()\r\n    b_display.label = ''\r\n    b_display.click_function = 'clear'\r\n    self.editButton(b_display)\r\nend\r\n\r\nfunction start()\r\n    players = getSeatedPlayers() -- Gets seated players\r\n    --players = {'White', 'Purple', 'Blue', 'Green', 'Red', 'Yellow', 'Brown', 'Pink'} -- For debugging, fakes players at table\r\n    playersCount = #players\r\n    b_display.label = ''\r\n    b_display.click_function = 'clear'\r\n    self.editButton(b_display)\r\n\r\n    for i=1, playersCount, 1 do\r\n        local tempName = Player[players[i]].steam_name\r\n        if tempName == nil then\r\n            tempName = players[i]\r\n        else\r\n            tempName = string.sub(tempName,1,8)\r\n        end\r\n        b_standings[i].label = tempName .. ': 0'\r\n        self.createButton(b_standings[i])\r\n        player_scores[i] = {color = players[i], score = 0}\r\n    end\r\nend\r\n\r\nfunction memoryOnOff()\r\n    if memoryOn then\r\n        memoryOn = false\r\n        b_memory.label='Memory:\\nOFF'\r\n        self.editButton(b_memory)\r\n    else\r\n        memoryOn = true\r\n        b_memory.label='Memory:\\nON'\r\n        self.editButton(b_memory)\r\n    end\r\nend\r\n\r\nfunction clear()\r\n    b_display.label = ''\r\n    self.editButton(b_display)\r\n    operator = ''\r\n    designatedPlayer = 0\r\nend\r\n\r\nfunction l1() l(1) end function l2() l(2) end function l3() l(3) end\r\nfunction l4() l(4) end function l5() l(5) end function l6() l(6) end\r\nfunction l7() l(7) end function l8() l(8) end\r\n\r\nfunction l(ln))\r\n    if operator == '' then\r\n        local value = b_standings[ln].value\r\n        b_display.label = value\r\n        self.editButton(b_display)\r\n        operator = 'pending'\r\n        designatedPlayer = ln\r\n    end\r\nend\r\n\r\nfunction plus()\r\n    if operator == 'pending' then\r\n        b_display.label = b_display.label .. ' + '\r\n        self.editButton(b_display)\r\n        operator = 'add'\r\n    end\r\nend\r\n\r\nfunction minus()\r\n    if operator == 'pending' then\r\n        b_display.label = b_display.label .. ' + '\r\n        self.editButton(b_display)\r\n        operator = 'subtract'\r\n    end\r\nend\r\n\r\nfunction b0() b('0') end function b1() b('1') end function b2() b('2') end\r\nfunction b3() b('3') end function b4() b('4') end function b5() b('5') end\r\nfunction b6() b('6') end function b7() b('7') end function b8() b('8') end\r\nfunction b9() b('9') end\r\n\r\nfunction b(n)\r\n    if operator == 'add' or operator == 'subtract' then\r\n        b_display.label = b_display.label .. n\r\n        self.editButton(b_display)\r\n    end\r\nend\r\n\r\nfunction enter()\r\n    if operator == 'add' or operator == 'subtract' then\r\n        local valueOld = b_standings[designatedPlayer].value\r\n        local s = b_display.label\r\n        local sn = string.find(s, '+')\r\n        local valueNew = string.sub(s, sn + 2, -1)\r\n        if operator == 'add' then\r\n            player_scores[designatedPlayer].score = valueOld + valueNew\r\n        elseif operator == 'subtract' then\r\n            player_scores[designatedPlayer].score = valueOld - valueNew\r\n        end\r\n        updateScores()\r\n\r\n        -- needs to be rewritten for when I have changing orders\r\n        --b_standings[designatedPlayer].label = players[designatedPlayer] .. ': ' .. b_standings[designatedPlayer].value\r\n        --self.editButton(b_standings[designatedPlayer])\r\n        --clear()\r\n    end\r\nend\r\n\r\nfunction updateScores()\r\n    local sort_func = function( a,b ) return a.score > b.score end\r\n    table.sort( player_scores, sort_func )\r\n    for i=1, playersCount, 1 do\r\n        local tempName = Player[player_scores[i].color].steam_name\r\n        if tempName == nil then\r\n            tempName = player_scores[i].color\r\n        else\r\n            tempName = string.sub(tempName,1,9)\r\n        end\r\n        b_standings[i].label = tempName .. ': ' .. player_scores[i].score\r\n        b_standings[i].value = player_scores[i].score\r\n        self.editButton(b_standings[i])\r\n    end\r\n    clear()\r\nend\r\n\r\n-- Basic paramiters for all buttons, utilized by createButton elsewhere\r\nb_display = {\r\n    index=0, label='Click Once Seated\\nto Start Scoring', click_function='start', function_owner=self,\r\n    position={-2.15,0.1,-0.925}, width=660, height=240, font_size=80\r\n}\r\n\r\nb_memory = {\r\n    index=1, label='Memory:\\nON', click_function='memoryOnOff', function_owner=self,\r\n    position={-2.6,0.1,0.9}, width=220, height=220, font_size=40\r\n}\r\n\r\nb_b0 = {\r\n    label='0', click_function='b0', function_owner=self,\r\n    position={-1.925,0.1,0.9}, width=430, height=220, font_size=180\r\n}\r\n\r\nb_b1 = {\r\n    label='1', click_function='b1', function_owner=self,\r\n    position={-2.6,0.1,0.45}, width=220, height=220, font_size=180\r\n}\r\n\r\nb_b2 = {\r\n    label='2', click_function='b2', function_owner=self,\r\n    position={-2.15,0.1,0.45}, width=220, height=220, font_size=180\r\n}\r\n\r\nb_b3 = {\r\n    label='3', click_function='b3', function_owner=self,\r\n    position={-1.7,0.1,0.45}, width=220, height=220, font_size=180\r\n}\r\n\r\nb_b4 = {\r\n    label='4', click_function='b4', function_owner=self,\r\n    position={-2.6,0.1,0}, width=220, height=220, font_size=180\r\n}\r\n\r\nb_b5 = {\r\n    label='5', click_function='b5', function_owner=self,\r\n    position={-2.15,0.1,0}, width=220, height=220, font_size=180\r\n}\r\n\r\nb_b6 = {\r\n    label='6', click_function='b6', function_owner=self,\r\n    position={-1.7,0.1,0}, width=220, height=220, font_size=180\r\n}\r\n\r\nb_b7 = {\r\n    label='7', click_function='b7', function_owner=self,\r\n    position={-2.6,0.1,-0.45}, width=220, height=220, font_size=180\r\n}\r\n\r\nb_b8 = {\r\n    label='8', click_function='b8', function_owner=self,\r\n    position={-2.15,0.1,-0.45}, width=220, height=220, font_size=180\r\n}\r\n\r\nb_b9 = {\r\n    label='9', click_function='b9', function_owner=self,\r\n    position={-1.7,0.1,-0.45}, width=220, height=220, font_size=180\r\n}\r\n\r\nb_enter = {\r\n    label='=', click_function='enter', function_owner=self,\r\n    position={-1.25,0.1,0.68}, width=220, height=430, font_size=180\r\n}\r\n\r\nb_plus = {\r\n    label='+', click_function='plus', function_owner=self,\r\n    position={-1.25,0.1,-0.235}, width=220, height=430, font_size=180\r\n}\r\n\r\nb_minus = {\r\n    label='-', click_function='minus', function_owner=self,\r\n    position={-1.25,0.1,-0.925}, width=220, height=220, font_size=180\r\n}\r\n\r\n\r\nb_standings = {\r\n    [1] = {\r\n        index=15, label='', click_function='l1', function_owner=self,\r\n        position={0.123,0.1,-0.9}, width=740, height=220, font_size=100, value='0'\r\n    },\r\n\r\n    [2] = {\r\n        index=16, label='', click_function='l2', function_owner=self,\r\n        position={0.123,0.1,-0.3}, width=740, height=220, font_size=100, value='0'\r\n    },\r\n\r\n    [3] = {\r\n        index=17, label='', click_function='l3', function_owner=self,\r\n        position={0.123,0.1,0.3}, width=740, height=220, font_size=100, value='0'\r\n    },\r\n\r\n    [4] = {\r\n        index=18, label='', click_function='l4', function_owner=self,\r\n        position={0.123,0.1,0.9}, width=740, height=220, font_size=100, value='0'\r\n    },\r\n\r\n    [5] = {\r\n        index=19, label='', click_function='l5', function_owner=self,\r\n        position={2.04,0.1,-0.9}, width=740, height=220, font_size=100, value='0'\r\n    },\r\n\r\n    [6] = {\r\n        index=20, label='', click_function='l6', function_owner=self,\r\n        position={2.04,0.1,-0.3}, width=740, height=220, font_size=100, value='0'\r\n    },\r\n\r\n    [7] = {\r\n        index=21, label='', click_function='l7', function_owner=self,\r\n        position={2.04,0.1,0.3}, width=740, height=220, font_size=100, value='0'\r\n    },\r\n\r\n    [8] = {\r\n        index=22, label='', click_function='l8', function_owner=self,\r\n        position={2.04,0.1,0.9}, width=740, height=220, font_size=100, value='0'\r\n    }\r\n}",
      "LuaScriptState": "",
      "GUID": "341c7c"
    }
  ],
  "DecalPallet": [],
  "TabStates": {
    "0": {
      "title": "Rules",
      "body": "",
      "color": "Grey",
      "visibleColor": {
        "r": 0.5,
        "g": 0.5,
        "b": 0.5
      },
      "id": 0
    },
    "1": {
      "title": "White",
      "body": "",
      "color": "White",
      "visibleColor": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "id": 1
    },
    "2": {
      "title": "Brown",
      "body": "",
      "color": "Brown",
      "visibleColor": {
        "r": 0.443,
        "g": 0.231,
        "b": 0.09
      },
      "id": 2
    },
    "3": {
      "title": "Red",
      "body": "",
      "color": "Red",
      "visibleColor": {
        "r": 0.856,
        "g": 0.1,
        "b": 0.094
      },
      "id": 3
    },
    "4": {
      "title": "Orange",
      "body": "",
      "color": "Orange",
      "visibleColor": {
        "r": 0.956,
        "g": 0.392,
        "b": 0.113
      },
      "id": 4
    },
    "5": {
      "title": "Yellow",
      "body": "",
      "color": "Yellow",
      "visibleColor": {
        "r": 0.905,
        "g": 0.898,
        "b": 0.172
      },
      "id": 5
    },
    "6": {
      "title": "Green",
      "body": "",
      "color": "Green",
      "visibleColor": {
        "r": 0.192,
        "g": 0.701,
        "b": 0.168
      },
      "id": 6
    },
    "7": {
      "title": "Blue",
      "body": "",
      "color": "Blue",
      "visibleColor": {
        "r": 0.118,
        "g": 0.53,
        "b": 1.0
      },
      "id": 7
    },
    "8": {
      "title": "Teal",
      "body": "",
      "color": "Teal",
      "visibleColor": {
        "r": 0.129,
        "g": 0.694,
        "b": 0.607
      },
      "id": 8
    },
    "9": {
      "title": "Purple",
      "body": "",
      "color": "Purple",
      "visibleColor": {
        "r": 0.627,
        "g": 0.125,
        "b": 0.941
      },
      "id": 9
    },
    "10": {
      "title": "Pink",
      "body": "",
      "color": "Pink",
      "visibleColor": {
        "r": 0.96,
        "g": 0.439,
        "b": 0.807
      },
      "id": 10
    },
    "11": {
      "title": "Black",
      "body": "",
      "color": "Black",
      "visibleColor": {
        "r": 0.25,
        "g": 0.25,
        "b": 0.25
      },
      "id": 11
    }
  },
  "CameraStates": [
    {
      "Position": {
        "x": 5.523876,
        "y": -26.6174583,
        "z": -2.26708412
      },
      "Rotation": {
        "x": 88.0009,
        "y": 359.6668,
        "z": 0.0
      },
      "Distance": 38.9116,
      "Zoomed": false,
      "AbsolutePosition": {
        "x": 5.53177,
        "y": 12.2704573,
        "z": -3.62452936
      }
    },
    {
      "Position": {
        "x": 5.35472,
        "y": -2.5,
        "z": -2.07807732
      },
      "Rotation": {
        "x": 90.0,
        "y": 359.8334,
        "z": 0.0
      },
      "Distance": 16.0901451,
      "Zoomed": false,
      "AbsolutePosition": {
        "x": 5.354721,
        "y": 13.5901394,
        "z": -2.07807827
      }
    },
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null
  ],
  "VersionNumber": "v12.0.4"
}