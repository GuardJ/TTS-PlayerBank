{
  "SaveName": "the project",
  "GameMode": "Custom UI Example",
  "Gravity": 0.5,
  "PlayArea": 0.5,
  "Date": "7/8/2019 8:06:47 AM",
  "Table": "Table_RPG",
  "Sky": "Sky_Field",
  "Note": "{-0.235,-0.1,-3.185}",
  "Rules": "",
  "XmlUI": "<!-- Welcome popup -->\r\n\r\n<Panel\r\n    id=\"Scoreboard\"\r\n    height=\"400\"\r\n    width=\"470\"\r\n    color=\"rgba(0,0,0,0.5)\"\r\n    rectAlignment=\"UpperRight\"\r\n    offsetXY=\"-160 0\"\r\n    hideAnimation=\"FadeOut\"\r\n    showAnimation=\"FadeIn\"\r\n    animationDuration=\"0.9\"\r\n    allowDragging=\"true\"\r\n    returnToOriginalPositionWhenReleased=\"false\"\r\n    >\r\n    <InputField\r\n        id=\"Scoreboard-StartingMoneyInput\"\r\n        text=\"$\"\r\n        >\r\n    </InputField>\r\n    <Text\r\n        id=\"Scoreboard-text\"\r\n        text=\"Test\"\r\n        color=\"red\"\r\n        outline=\"black\"\r\n        outlineSize=\"2 2\"\r\n        alignment=\"LowerCenter\"\r\n        fontSize=\"50\"\r\n        >\r\n    </Text>\r\n    <TableLayout class=\"noCellBackground\" height=\"512\" width=\"512\" rectAlignment=\"MiddleCenter\" offsetXY=\"0 0\">\r\n    <Row class=\"viewport\">\r\n      <Cell dontUseTableCellBackground=\"true\">\r\n          <TableLayout cellPadding=\"7\" padding=\"20\" cellSpacing=\"5\" cellBackgroundImage=\"Sprites/Outline_Sharp\" cellBackgroundColor=\"rgba(1,1,0,0.125)\" autoCalculateHeight=\"1\" columnWidths=\"180 0\">\r\n            <Row id=\"test-row\" preferredHeight=\"44\">\r\n              <Cell>\r\n                <Text class=\"h3\">Input Field1</Text>\r\n              </Cell>\r\n              <Cell>\r\n                <InputField />\r\n              </Cell>\r\n            </Row>\r\n          </TableLayout>\r\n      </Cell>\r\n    </Row>\r\n    </TableLayout>\r\n    <TableLayout class=\"noCellBackground\" height=\"512\" width=\"512\" rectAlignment=\"MiddleCenter\" offsetXY=\"0 0\">\r\n    <Row class=\"viewport\">\r\n      <Cell dontUseTableCellBackground=\"true\">\r\n          <TableLayout cellPadding=\"7\" padding=\"20\" cellSpacing=\"5\" cellBackgroundImage=\"Sprites/Outline_Sharp\" cellBackgroundColor=\"rgba(1,1,0,0.125)\" autoCalculateHeight=\"1\" columnWidths=\"180 0\">\r\n\r\n            <Row class=\"sectionHeaderRow\">\r\n              <Cell columnSpan=\"2\" dontUseTableCellBackground=\"1\">\r\n                <Text class=\"h2\" alignment=\"MiddleCenter\">Input Elements</Text>\r\n              </Cell>\r\n            </Row>\r\n            <Row preferredHeight=\"44\">\r\n              <Cell>\r\n                <Text class=\"h3\">Input Field2</Text>\r\n              </Cell>\r\n              <Cell>\r\n                <InputField />\r\n              </Cell>\r\n            </Row>\r\n          </TableLayout>\r\n      </Cell>\r\n    </Row>\r\n    </TableLayout>\r\n</Panel>\r\n<Panel\r\n    id=\"scoreboard-open-close\"\r\n    height=\"20\"\r\n    width=\"160\"\r\n    color=\"rgba(0,0,0,1)\"\r\n    rectAlignment=\"UpperRight\"\r\n    offsetXY=\"-310 0\"\r\n    hideAnimation=\"FadeOut\"\r\n    animationDuration=\"0.5\"\r\n    allowDragging=\"true\"\r\n    returnToOriginalPositionWhenReleased=\"false\"\r\n    >\r\n    <Text\r\n        text=\"SCOREBOARD\"\r\n        color=\"white\"\r\n        outline=\"black\"\r\n        outlineSize=\"2 2\"\r\n        alignment=\"Center\"\r\n        fontSize=\"15\"\r\n        >\r\n    </Text>\r\n    <Button\r\n        onClick=\"hideScoreboard\"\r\n        height=\"20\"\r\n        width=\"20\"\r\n        color=\"rgba(0,0,0,0.7)\"\r\n        text=\"&#8896;\"\r\n        textColor=\"rgba(1,1,1,0.9)\"\r\n        fontStyle=\"Bold\"\r\n        fontSize=\"15\"\r\n        rectAlignment=\"UpperRight\"\r\n        >\r\n    </Button>\r\n    <Button\r\n        onClick=\"showScoreboard\"\r\n        height=\"20\"\r\n        width=\"20\"\r\n        color=\"rgba(0,0,0,0.7)\"\r\n        text=\"&#8897;\"\r\n        textColor=\"rgba(1,1,1,0.9)\"\r\n        fontStyle=\"Bold\"\r\n        fontSize=\"15\"\r\n        rectAlignment=\"UpperLeft\"\r\n        >\r\n    </Button>\r\n</Panel>",
  "CustomUIAssets": [
    {
      "Name": "TTSLogo",
      "URL": "http://cloud-3.steamusercontent.com/ugc/936064212973557569/9D9F00D3BAEB906B3393649C931267AB6F24D915/"
    }
  ],
  "LuaScript": "function onLoad()\nhideScoreboard()\nend\n\nstartingMoney = 3200\nbankP1 = startingMoney\nbankP2 = startingMoney\n\nfunction get_StartingMoney()\n    return startingMoney\nend\n\nfunction moneyPayPlayer(pA, pB)\n    --ref pA bank\n    --ref PB bank\n    --pA enters ammount to pay pB\n    --PA confirms payment\n    --calculate transaction\n    --update banks\nend\n\nfunction moneyRequest(pA, pB)\n    --ref pA bank\n    --ref PB bank\n    --pA enters ammount to request from pB\n    --pB confirms request payment\n    --calculate transaction\n    --update banks\nend\n\nfunction moneyPayAll(pA)\n    --ref pA bank\n    --ref all other players bank except pA\n    --pA enter ammount x1\n    --pA confirms payment X to each player / total payment\n    --calculate transaction\n    --update banks\nend\n\nfunction moneyBuy()\n    --ref pA bank\n    --??? ref item price ???\n    --or pA enter ammount to charge to pA bank\n    --calculate charge to pA bank\n    --update pA bank only\nend\n\nfunction moneyPayPool(a)\n    --ref pA bank\n    --??? ref item price ???\n    --or pA enter ammount to charge to pA bank\n    --calculate charge to pA bank\n    --update pA bank only\nend\n\nfunction moneyClaimPool()\n    --ref pA bank\n    --ref Pool bank\n    --pA confirms claim\n    --calculate transaction\n    --update banks\nend\n\n\nfunction testFunc()\n    UI.hide(\"test-row\")\nend\n\n--Hides the Scoreboard\nfunction hideScoreboard()\n    UI.hide(\"Scoreboard\")\nend\n\nfunction showScoreboard()\n    UI.show(\"Scoreboard\")\nend\n\n--[=====[\nfunction announcePlayers()\n    --this uses the existing textTools GUID to get Object ref for each\n    textTools_GUID={\"122fb8\", \"9421ac\", \"8cbee2\", \"ba516b\",\n                    \"bf78b6\", \"562124\", \"9c997c\", \"e80c0c\"}\n    textTools = {}\n    for _, tool_GUID in pairs(textTools_GUID) do\n        textTools[_] = getObjectFromGUID(tool_GUID)\n    end\n\n    --this gets only seated players into a list\n    --then uses player ref to update texttool accordingly\n    players = getSeatedPlayers()\n    playerCount = #players\n    for _, playerReference in ipairs(players) do\n            textTools[_].setValue(Player[players[_]].steam_name)\n            textTools[_].TextTool.setFontColor(Player[players[_]].color)\n    end\nend\n--]=====]",
  "LuaScriptState": "{\"rt\":true}",
  "Grid": {
    "Type": 0,
    "Lines": false,
    "Color": {
      "r": 0.0,
      "g": 0.0,
      "b": 0.0
    },
    "Opacity": 0.75,
    "ThickLines": false,
    "Snapping": false,
    "Offset": false,
    "BothSnapping": false,
    "xSize": 2.0,
    "ySize": 2.0,
    "PosOffset": {
      "x": 0.0,
      "y": 1.0,
      "z": 0.0
    }
  },
  "Lighting": {
    "LightIntensity": 0.54,
    "LightColor": {
      "r": 1.0,
      "g": 0.9804,
      "b": 0.8902
    },
    "AmbientIntensity": 1.3,
    "AmbientType": 0,
    "AmbientSkyColor": {
      "r": 0.5,
      "g": 0.5,
      "b": 0.5
    },
    "AmbientEquatorColor": {
      "r": 0.5,
      "g": 0.5,
      "b": 0.5
    },
    "AmbientGroundColor": {
      "r": 0.5,
      "g": 0.5,
      "b": 0.5
    },
    "ReflectionIntensity": 1.0,
    "LutIndex": 0,
    "LutContribution": 1.0
  },
  "Hands": {
    "Enable": true,
    "DisableUnused": false,
    "Hiding": 0,
    "HandTransforms": [
      {
        "Color": "Red",
        "Transform": {
          "posX": -15.1108065,
          "posY": 6.264009,
          "posZ": -20.1076221,
          "rotX": 0.0,
          "rotY": 0.0,
          "rotZ": 0.0,
          "scaleX": 11.7842541,
          "scaleY": 9.174497,
          "scaleZ": 4.87123871
        }
      },
      {
        "Color": "Yellow",
        "Transform": {
          "posX": -30.2150211,
          "posY": 6.264009,
          "posZ": 10.17524,
          "rotX": 0.0,
          "rotY": 90.0,
          "rotZ": 0.0,
          "scaleX": 11.7384253,
          "scaleY": 9.174497,
          "scaleZ": 4.96665955
        }
      },
      {
        "Color": "Purple",
        "Transform": {
          "posX": 30.25128,
          "posY": 6.264009,
          "posZ": 9.59069252,
          "rotX": 0.0,
          "rotY": 270.0,
          "rotZ": 0.0,
          "scaleX": 11.7384176,
          "scaleY": 9.174497,
          "scaleZ": 4.96665955
        }
      },
      {
        "Color": "Blue",
        "Transform": {
          "posX": 15.4749184,
          "posY": 6.264009,
          "posZ": 19.8365288,
          "rotX": 0.0,
          "rotY": 179.8,
          "rotZ": 0.0,
          "scaleX": 11.8952227,
          "scaleY": 9.174497,
          "scaleZ": 4.92459726
        }
      },
      {
        "Color": "White",
        "Transform": {
          "posX": 15.1961479,
          "posY": 6.264009,
          "posZ": -20.1400986,
          "rotX": 0.0,
          "rotY": 0.0,
          "rotZ": 0.0,
          "scaleX": 11.7842426,
          "scaleY": 9.17449951,
          "scaleZ": 4.87123871
        }
      },
      {
        "Color": "Green",
        "Transform": {
          "posX": -15.1927767,
          "posY": 6.264009,
          "posZ": 19.787817,
          "rotX": 0.0,
          "rotY": 180.0,
          "rotZ": 0.0,
          "scaleX": 11.7842426,
          "scaleY": 9.174497,
          "scaleZ": 4.87123871
        }
      },
      {
        "Color": "Pink",
        "Transform": {
          "posX": 30.10358,
          "posY": 6.264009,
          "posZ": -8.449126,
          "rotX": 0.0,
          "rotY": 270.0,
          "rotZ": 0.0,
          "scaleX": 11.7384148,
          "scaleY": 9.174497,
          "scaleZ": 4.96665955
        }
      },
      {
        "Color": "Orange",
        "Transform": {
          "posX": -30.247818,
          "posY": 6.264009,
          "posZ": -8.822588,
          "rotX": 0.0,
          "rotY": 90.0,
          "rotZ": 0.0,
          "scaleX": 11.7384291,
          "scaleY": 9.174497,
          "scaleZ": 4.96665955
        }
      }
    ]
  },
  "Turns": {
    "Enable": false,
    "Type": 0,
    "TurnOrder": [],
    "Reverse": false,
    "SkipEmpty": false,
    "DisableInteractions": false,
    "PassTurns": true,
    "TurnColor": ""
  },
  "VectorLines": [
    {
      "points3": [
        {
          "x": 17.001482,
          "y": 0.9711354,
          "z": 1.68818271
        },
        {
          "x": 23.5268688,
          "y": 0.971135139,
          "z": 1.68112385
        },
        {
          "x": 23.517601,
          "y": 0.9711342,
          "z": -6.88674259
        },
        {
          "x": 16.9922142,
          "y": 0.9711342,
          "z": -6.87968349
        }
      ],
      "color": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "thickness": 0.1,
      "loop": true
    },
    {
      "points3": [
        {
          "x": -6.791662,
          "y": 0.971133232,
          "z": -12.3725548
        },
        {
          "x": -6.791662,
          "y": 0.971133232,
          "z": -12.3725548
        },
        {
          "x": -6.791662,
          "y": 0.971133232,
          "z": -12.3725548
        },
        {
          "x": -6.791662,
          "y": 0.971133232,
          "z": -12.3725548
        }
      ],
      "color": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "thickness": 0.1,
      "loop": true
    },
    {
      "points3": [
        {
          "x": 20.4030952,
          "y": 0.9711342,
          "z": -9.897056
        },
        {
          "x": 20.4030952,
          "y": 0.9711342,
          "z": -9.897056
        },
        {
          "x": 20.4030952,
          "y": 0.9711342,
          "z": -9.897056
        },
        {
          "x": 20.4030952,
          "y": 0.9711342,
          "z": -9.897056
        }
      ],
      "color": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "thickness": 0.1,
      "loop": true
    },
    {
      "points3": [
        {
          "x": 14.3030081,
          "y": 0.9711356,
          "z": 3.720791
        },
        {
          "x": 14.3030081,
          "y": 0.9711356,
          "z": 3.720791
        },
        {
          "x": 14.3030081,
          "y": 0.9711356,
          "z": 3.720791
        },
        {
          "x": 14.3030081,
          "y": 0.9711356,
          "z": 3.720791
        }
      ],
      "color": {
        "r": 0.856,
        "g": 0.1,
        "b": 0.094
      },
      "thickness": 0.1,
      "loop": true
    }
  ],
  "ObjectStates": [
    {
      "Name": "Custom_Token",
      "Transform": {
        "posX": 2.69523454,
        "posY": 1.06,
        "posZ": -0.7962286,
        "rotX": -4.49894166E-08,
        "rotY": 180.000015,
        "rotZ": -3.49960239E-08,
        "scaleX": 2.548663,
        "scaleY": 1.0,
        "scaleZ": 2.548663
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "https://d.grancypher.xyz/black-877e425b.png",
        "ImageSecondaryURL": "",
        "WidthScale": 0.0,
        "CustomToken": {
          "Thickness": 0.200000048,
          "MergeDistancePixels": 15.0,
          "Stackable": false
        }
      },
      "XmlUI": "",
      "LuaScript": "function onload()\r\n    --self.createButton(test)\r\n    do --Start Create Buttons\r\n        --button order here determines its index? starting at index 0\r\n        self.createButton(b_display)        --<-index 0\r\n        self.createButton(b_miniDisplay)    --<-index 1\r\n\r\n        self.createButton(b_white)\r\n        self.createButton(b_red)\r\n        self.createButton(b_orange)\r\n        self.createButton(b_yellow)\r\n        self.createButton(b_green)\r\n        self.createButton(b_blue)\r\n        self.createButton(b_purple)\r\n        self.createButton(b_pink)\r\n\r\n        self.createButton(b_PayPlayer)\r\n        self.createButton(b_Request)\r\n        self.createButton(b_PayPlayerMini)\r\n        self.createButton(b_RequestMini)\r\n        self.createButton(b_PayAll)\r\n\r\n        self.createButton(b_b0)\r\n        self.createButton(b_b1)\r\n        self.createButton(b_b2)\r\n        self.createButton(b_b3)\r\n        self.createButton(b_b4)\r\n        self.createButton(b_b5)\r\n        self.createButton(b_b6)\r\n        self.createButton(b_b7)\r\n        self.createButton(b_b8)\r\n        self.createButton(b_b9)\r\n        self.createButton(b_reset)\r\n        self.createButton(b_colorReset)\r\n    end --End Create Buttons\r\n\r\n    do --Start Global VAriables\r\n        pBank_Balance = 0\r\n        colorChoice = nil\r\n        inTransaction = false\r\n\r\n\r\n        pOwner_ttsColor = 'Unclaimed'\r\n        pOwner_Name = 'Unclaimed'\r\n        pBank_GUID = self.get_GUID()\r\n        pOwner = {pOwner_ttsColor,pOwner_Name,pBank_GUID}\r\n\r\n        playerList = {}\r\n\r\n        colorsIndex = 2-1\r\n        buttonsColors = {b_white,b_red,b_orange,b_yellow,b_green,b_blue,b_purple,b_pink}\r\n        posOriginals = {}\r\n\r\n        pOwnerB={'Nobody', 'Nobody', ''}\r\n    end --End Global VAriables\r\n\r\n    get_StartingMoney()\r\n    --set_pOwner('Orange') --for debug\r\nend\r\n\r\n--players cannot pay themselves\r\n\r\n--[=====[\r\n    copy/paste for comment block\r\n    status = xpcall( myfunction, myerrorhandler )\r\n    print(status)\r\n--]=====]\r\n\r\n--this get_s updated with global startingMoney upon this objects OnLoad\r\n--using get_StartingMoney\r\n\r\nfunction none()\r\n    --placeholder\r\nend\r\n\r\nfunction myerrorhandler( err )\r\n   print( \"ERROR: \", err )\r\nend\r\nfunction myfunction ()\r\n   n = n/nil\r\nend\r\n\r\n--status = xpcall( myfunction, myerrorhandler )\r\n--print(status)\r\n\r\ndo --Getters\r\n    function get_pOwner()\r\n        return pOwner\r\n    end\r\n\r\n    function get_pBank()\r\n        return true\r\n    end\r\n\r\n    function get_InTransaction()\r\n        return inTransaction\r\n    end\r\n\r\n    function get_StartingMoney()\r\n        pBank_Balance = Global.call('get_StartingMoney')\r\n        b_display.label = '$'..pBank_Balance\r\n        self.editButton(b_display) --updates index 0 button?\r\n    end\r\n\r\n    function get_MiniDisplayAmmount()\r\n        ammount = 0\r\n\r\n        miniLabel = b_miniDisplay.label\r\n        leadSymbol = string.sub(miniLabel,1,1)\r\n\r\n        if (leadSymbol == '+' or leadSymbol =='-') then\r\n            miniLabel = b_miniDisplay.label\r\n            labelNumbers = leadSymbol..string.sub(miniLabel,3)\r\n            ammount = tonumber(labelNumbers)\r\n        end\r\n\r\n        return ammount\r\n    end\r\n\r\n    function set_pOwnerB()\r\n        objList = getAllObjects()\r\n        tempOwnerB ={}\r\n\r\n        for _, obj in pairs(objList) do\r\n            if obj.call('get_pBank') == true then\r\n                tempOwnerB[1],tempOwnerB[2],tempOwnerB[3] =\r\n                    obj.call('get_pOwner')[1],\r\n                    obj.call('get_pOwner')[2],\r\n                    obj.call('get_pOwner')[3]\r\n                if tempOwnerB[1] ~= 'Unclaimed' and tempOwnerB[1] ~= pOwner[1] then\r\n                    if tempOwnerB[1] == colorChoice then\r\n                        pOwnerB = tempOwnerB\r\n                        return true\r\n                    end\r\n                end\r\n            end\r\n        end\r\n    end\r\nend--Getters\r\n\r\nfunction clear_pOwnerB()\r\n    pOwnerB = {'Nobody', 'Nobody', ''}\r\n    colorChoice = nil\r\nend\r\n\r\ndo --Setters\r\nend--setters\r\n\r\ndo --prob uselesss\r\n    function updatePlayerList(clicker_Color)\r\n        for _, player in pairs(playerList) do\r\n            if playerList[_] == clicker_Color then\r\n                return\r\n            elseif _ == #playerList then\r\n                playerList[_+1] = clicker_Color\r\n                for _, player in pairs(playerList) do\r\n                    if _ ~= nil then\r\n                        Player[player].call('updatePlayerList', clicker_Color)\r\n                    end\r\n                end\r\n            end\r\n        end\r\n    end\r\n\r\n    function colorToRGB(clicker_Color)\r\n        for _, colorRGB in pairs(ttsColors) do\r\n            if ttsColors[_][4] == colorSet then\r\n                rgbValue = {ttsColors[1],ttsColors[2],ttsColors[3],1}\r\n                return rgbValue\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\ndo --NumPad Display Interaction\r\n    function b0() b('0') end function b1() b('1') end function b2() b('2') end\r\n    function b3() b('3') end function b4() b('4') end function b5() b('5') end\r\n    function b6() b('6') end function b7() b('7') end function b8() b('8') end\r\n    function b9() b('9') end\r\n    function br() entryZero() end\r\n\r\n    function clear() --clears the b_miniDisplay\r\n        newValue = ''\r\n        b_miniDisplay.label = newValue\r\n        self.editButton({index=1, label=newValue})\r\n    end\r\n\r\n    function b(n)\r\n        checkZero()\r\n        b_miniDisplay.label = b_miniDisplay.label .. n\r\n        newValue = b_miniDisplay.label\r\n        self.editButton({index=1, label=newValue})\r\n    end\r\n\r\n    function checkZero()\r\n        value = b_miniDisplay.label\r\n        if value == \"$0\" then\r\n            b_miniDisplay.label = \"$\"\r\n        elseif value == \"+$0\" then\r\n            b_miniDisplay.label = \"+$\"\r\n        elseif value == \"-$0\" then\r\n            b_miniDisplay.label = \"-$\"\r\n        end\r\n    end\r\n\r\n    function entryZero()\r\n        newValue = \"$0\"\r\n        b_miniDisplay.label = '$0'\r\n        b_miniDisplay.click_function = 'clear'\r\n        self.editButton({index=1, label=newValue})\r\n    end\r\nend --NumPad Display Interaction\r\n\r\ndo --Color Buttons Interaction\r\n    do --Color Buttons Relay\r\n        function white()  p(ttsColors[1],b_white)  end function red()    p(ttsColors[2],b_red)    end\r\n        function orange() p(ttsColors[3],b_orange) end function yellow() p(ttsColors[4],b_yellow) end\r\n        function green()  p(ttsColors[5],b_green)  end function blue()   p(ttsColors[6],b_blue)   end\r\n        function purple() p(ttsColors[7],b_purple) end function pink()   p(ttsColors[8],b_pink)   end\r\n    end --Color Buttons Relay\r\n\r\n    do\r\n        function p(color, button)\r\n            if color[4] ~= pOwner[1] then\r\n                inTransaction = true\r\n                colorChoice = color[4]\r\n                --broadcastToAll(color[4]..'test')\r\n                --broadcastToAll(pOwnerB[1]..'test')\r\n\r\n                --HAVE TO CHECK IF THE COLOR PICKED IS A VALID PLAYER BANK\r\n                if set_pOwnerB() == true then\r\n                    broadcastToAll('test3')\r\n                    b_miniDisplay.color = button.color\r\n                    self.editButton({index=1,color=button.color})\r\n\r\n                    colorsHide()\r\n                end\r\n            elseif color[4] == pOwner[1] then\r\n                message = 'You may not complete a transaction with yourself!'\r\n                --broadcastToColor(message, pOwner[1], pOwner[1])\r\n                broadcastToAll(message)\r\n            end\r\n        end\r\n\r\n        function requestedP(params)\r\n            inTransaction = true\r\n\r\n            pOwnerB, ammount = params[1],params[2]\r\n\r\n            b_miniDisplay.color = pOwnerB[1]\r\n            ammount = '-$'..ammount\r\n            b_miniDisplay.label = ammount\r\n            self.editButton({index=1,label=ammount,color=pOwnerB[1]})\r\n\r\n            colorsHide()\r\n        end\r\n\r\n        function colorsHide()\r\n            for _, buttonColor in pairs(buttonsColors) do\r\n                posCurrent = buttonsColors[_].position\r\n                posOriginals[_] = posCurrent\r\n                posHidden = {posCurrent[1], 0, posCurrent[3]}\r\n\r\n                buttonsColors[_].position = posHidden\r\n                buttonsColors[_].rotation = {180,0,0}\r\n                self.editButton({index=_+colorsIndex, position=posHidden, rotation={180,0,0}})\r\n            end\r\n\r\n            miniShow()\r\n        end\r\n\r\n        function cr()\r\n            colorChoice = nil\r\n            inTransaction = false\r\n            clear_pOwnerB()\r\n            entryZero()\r\n            colorsShow()\r\n        end\r\n\r\n        function colorsShow()\r\n            for _, buttonColor in pairs(buttonsColors) do\r\n                buttonsColors[_].position = posOriginals[_]\r\n                x = posOriginals[_][1]\r\n                z = posOriginals[_][2]\r\n                y = posOriginals[_][3]\r\n                buttonsColors[_].rotation = {0,0,0}\r\n                self.editButton({index=_+ colorsIndex, position={x,z,y}, rotation={0,0,0}})\r\n            end\r\n\r\n            miniHide()\r\n        end\r\n    end\r\n\r\n    function miniShow()\r\n        posMiniShow = {pos00[1]-0, pos00[2], pos00[3]+0.3}\r\n        rotMiniShow = {0,0,0}\r\n        b_miniDisplay.position = posMiniShow\r\n        self.editButton({index=1, position=posMiniShow, rotation=rotMiniShow})\r\n    end\r\n    function miniHide()\r\n        posMiniHide = {pos00[1]-0, 0, pos00[3]+0.3}\r\n        rotMiniHide = {180,0,0}\r\n        b_miniDisplay.position = posMiniHide\r\n        self.editButton({index=1, position=posMiniHide, rotation=rotMiniHide})\r\n    end\r\nend --Color Buttons Interaction\r\n\r\nfunction moneyPayPlayer()\r\n    miniLabel = b_miniDisplay.label\r\n    leadSymbol = string.sub(miniLabel,1,1)\r\n\r\n    if leadSymbol == '$' then\r\n        newValue = '-'..b_miniDisplay.label\r\n        b_miniDisplay.label = newValue\r\n        self.editButton({index=1,label=newValue})\r\n    end\r\n    if leadSymbol == '+' then\r\n        newValue = '-'..string.sub(b_miniDisplay.label,2)\r\n        b_miniDisplay.label = newValue\r\n        self.editButton({index=1,label=newValue})\r\n    end\r\nend\r\n\r\nfunction moneyRequest()\r\n    miniLabel = b_miniDisplay.label\r\n    leadSymbol = string.sub(miniLabel,1,1)\r\n\r\n    if leadSymbol == '$' then\r\n        newValue = '+'..b_miniDisplay.label\r\n        b_miniDisplay.label = newValue\r\n        self.editButton({index=1,label=newValue})\r\n    end\r\n    if leadSymbol == '-' then\r\n        newValue = '+'..string.sub(b_miniDisplay.label,2)\r\n        b_miniDisplay.label = newValue\r\n        self.editButton({index=1,label=newValue})\r\n    end\r\nend\r\n\r\nfunction requestToPlayerB(ammount)\r\n    params = {pOwner, ammount}\r\n    pOwnerBInTrans = pOwnerB[3].call('get_InTransaction')\r\n\r\n    if pOwnerBInTrans == false then\r\n        pOwnerB[3].call('requestedP', params)\r\n\r\n        broadcastAmmount = string.sub(miniLabel,2)\r\n        broadcastToAll(pOwner[2]..' requests ' .. broadcastAmmount..' from '..pOwnerB[2]..'!')\r\n    elseif pOwnerBInTrans == true then\r\n        message = pOwnerB[2]..' is already in a transaction. Please wait.'\r\n        --broadcastToColor(message, pOwner[1], pOwnerB[1])\r\n        broadcastToAll(message)\r\n    end\r\n    --request is either sent or fails\r\n    inTransaction = false\r\n    clear_pOwnerB()\r\nend\r\n\r\nfunction sentPayment(params)\r\n    pOwnerB, sAmmount = params[1], params[2]\r\n\r\n    pBank_Balance = pBank_Balance + sAmmount\r\n    newValue = '$'..tostring(pBank_Balance)\r\n    b_display.label = newValue\r\n    self.editButton({index=0,label=newValue})\r\n\r\n    message = pOwner[2]..' received $'..sAmmount..' from '..pOwnerB[2]\r\n    broadcastToAll(message)\r\nend\r\n\r\nfunction payPlayer(dAmmount)\r\n    params = {pOwner, dAmmount}\r\n\r\n    pOwnerB[3].call('sentPayment',params)\r\n\r\n    message = 'You paid $'..dAmmount..' to '..pOwnerB[2]\r\n    --broadcastToColor(message, pOwner[1], pOwnerB[1])\r\n    broadcastToAll(message)\r\nend\r\n\r\nfunction confirm()\r\n    if pOwnerB[1] ~= 'Nobody' then\r\n        miniLabel = b_miniDisplay.label\r\n        leadSymbol = string.sub(miniLabel,1,1)\r\n\r\n        if (leadSymbol == '+' or leadSymbol =='-') then\r\n            dAmmount = get_MiniDisplayAmmount()\r\n            if leadSymbol == '-' then\r\n                pBank_Balance = pBank_Balance + dAmmount\r\n                newValue = '$'..tostring(pBank_Balance)\r\n                b_display.label = newValue\r\n                self.editButton({index=0,label=newValue})\r\n\r\n                payPlayer(-dAmmount)\r\n            elseif leadSymbol == '+' then\r\n                requestToPlayerB(dAmmount)\r\n            end\r\n            cr()\r\n        end\r\n    end\r\nend\r\n\r\ndo --Main Display\r\n    function bDisplay(obj,clicker_Color,alt_click)\r\n        set_pOwner(clicker_Color)   --player who clicks main display claims the bank\r\n    end\r\n\r\n    function set_pOwner(clicker_Color)\r\n        if pOwner_ttsColor == 'Unclaimed' then\r\n            pOwner_ttsColor = clicker_Color\r\n\r\n            if Player[pOwner_ttsColor].steam_name == nil then\r\n                pOwner_Name = pOwner_ttsColor\r\n            else\r\n                pOwner_Name = Player[pOwner_ttsColor].steam_name\r\n            end\r\n\r\n            pOwner = {pOwner_ttsColor, pOwner_Name, getObjectFromGUID(pBank_GUID)}\r\n\r\n            b_display.color = clicker_Color\r\n            self.editButton({index=0,color=clicker_Color})\r\n\r\n            updatePlayerList(clicker_Color)\r\n        elseif pOwner_ttsColor ~= 'Unclaimed' then\r\n            message = 'This is already owned by '\r\n            --broadcastToColor(message..pOwner_Name, clicker_Color, pOwner_ttsColor)\r\n            broadcastToAll(message)\r\n        end\r\n    end\r\nend --Main Display\r\n\r\ndo\r\n    ttsColors = {\r\n        {1,1,1,'White'}, {0.856, 0.1, 0.094,'Red'}, {0.956, 0.392, 0.113,'Orange'}, {0.905, 0.898, 0.172,'Yellow'},\r\n        {0.192, 0.701, 0.168,'Green'}, {0.118, 0.53, 1,'Blue'}, {0.627, 0.125, 0.941,'Purple'}, {0.96, 0.439, 0.807,'Pink'}\r\n                }\r\n\r\n    --Positions are {x,z,y}\r\n    pos00 = {0,0.1,-1}   --Origin for DISPLAY\r\n    do --Start Display Parameters\r\n        b_display = {\r\n            index=0, label='$---',\r\n            click_function='bDisplay', function_owner=self,\r\n            position={pos00[1]-0, pos00[2], pos00[3]-0},\r\n            width=700, height=100, font_size=100,\r\n            color={1,1,1}\r\n        }\r\n        b_miniDisplay = {\r\n            index=0, label='$0',\r\n            click_function='confirm', function_owner=self,\r\n            position={pos00[1]-0, pos00[2]-pos00[2], pos00[3]+0.3},\r\n            rotation={180,0,0},\r\n            width=300, height=100, font_size=70,\r\n            color={1,1,1}\r\n        }\r\n    end --End Display Parameters\r\n\r\n    pos01 = {-0,0.1,-0}  --Origin for Action Buttons\r\n    do--Start Action Button Parameters\r\n        b_PayPlayer = {\r\n            label='Pay', click_function='moneyPayPlayer', function_owner=self,\r\n            position={pos01[1]-0, pos01[2], pos01[3]-0.3}, width=500, height=100,\r\n            color={1, 1, 1}\r\n        }\r\n\r\n        b_Request = {\r\n            label='Request', click_function='moneyRequest', function_owner=self,\r\n            position={pos01[1]-0, pos01[2], pos01[3]+0}, width=500, height=100,\r\n            color={1, 1, 1}\r\n        }\r\n\r\n        b_PayPlayerMini = {\r\n            click_function='get_MiniDisplayAmmount', function_owner=self,\r\n            position={pos01[1]-0.7, pos01[2], pos01[3]-0.65}, width=200, height=100,\r\n            color={1, 1, 1}\r\n        }\r\n\r\n        b_RequestMini = {\r\n            click_function='none', function_owner=self,\r\n            position={pos01[1]+0.7, pos01[2], pos01[3]-0.65}, width=200, height=100,\r\n            color={1, 1, 1}\r\n        }\r\n\r\n        b_PayAll = {\r\n            click_function='none', function_owner=self,\r\n            position={pos01[1]-0, pos01[2], pos01[3]+0.3}, width=500, height=100,\r\n            color={1, 1, 1}\r\n        }\r\n    end--End Action Button Parameters\r\n\r\n    pos08 = {0,0.1,-0.65} --Origin For Color Buttons\r\n    do --Start Color Button Parameters\r\n        b_white = {\r\n            click_function='white', function_owner=self,\r\n            position={pos08[1]-0.3, pos08[2], pos08[3]-0.1}, width=100, height=100,\r\n            color={1, 1, 1}\r\n        }\r\n\r\n        b_red = {\r\n            click_function='red', function_owner=self,\r\n            position={pos08[1]-0.1, pos08[2], pos08[3]-0.1}, width=100, height=100,\r\n            color={0.856, 0.1, 0.094}\r\n        }\r\n\r\n        b_orange = {\r\n            click_function='orange', function_owner=self,\r\n            position={pos08[1]+0.1, pos08[2], pos08[3]-0.1}, width=100, height=100,\r\n            color={0.956, 0.392, 0.113}\r\n        }\r\n\r\n        b_yellow = {\r\n            click_function='yellow', function_owner=self,\r\n            position={pos08[1]+0.3, pos08[2], pos08[3]-0.1}, width=100, height=100,\r\n            color={0.905, 0.898, 0.172}\r\n        }\r\n        ---------------------------\r\n        b_green = {\r\n            click_function='green', function_owner=self,\r\n            position={pos08[1]-0.3, pos08[2], pos08[3]+0.1}, width=100, height=100,\r\n            color={0.192, 0.701, 0.168}\r\n        }\r\n\r\n        b_blue = {\r\n            click_function='blue', function_owner=self,\r\n            position={pos08[1]-0.1, pos08[2], pos08[3]+0.1}, width=100, height=100,\r\n            color={0.118, 0.53, 1}\r\n        }\r\n\r\n        b_purple = {\r\n            click_function='purple', function_owner=self,\r\n            position={pos08[1]+0.1, pos08[2], pos08[3]+0.1}, width=100, height=100,\r\n            color={0.627, 0.125, 0.941}\r\n        }\r\n\r\n        b_pink = {\r\n            click_function='pink', function_owner=self,\r\n            position={pos08[1]+0.3, pos08[2], pos08[3]+0.1}, width=100, height=100,\r\n            color={0.96, 0.439, 0.807}\r\n        }\r\n    end --End Color Button Parameters\r\n\r\n    --{0,0.1,0.3}\r\n    pos09 = {2,0.1,0}  --Origin For NumPad Buttons\r\n    do --Start NumPad Button Parameters\r\n        b_b0 = {\r\n            label='0', click_function='b0', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ 0 ,pos09[2]+ 0 ,pos09[3]+ 0 },\r\n            rotation={0,0,0}\r\n        }\r\n        b_b1 = {\r\n            label='1', click_function='b1', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ (-0.2) ,pos09[2]+ 0 ,pos09[3]+ (-0.2) }\r\n        }\r\n        b_b2 = {\r\n            label='2', click_function='b2', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ 0 ,pos09[2]+ 0 ,pos09[3]+ (-0.2) }\r\n        }\r\n        b_b3 = {\r\n            label='3', click_function='b3', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ (0.2) ,pos09[2]+ 0 ,pos09[3]+ (-0.2) }\r\n        }\r\n        b_b4 = {\r\n            label='4', click_function='b4', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ (-0.2) ,pos09[2]+ 0 ,pos09[3]+ (-0.4) }\r\n        }\r\n        b_b5 = {\r\n\r\n            label='5', click_function='b5', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ 0 ,pos09[2]+ 0 ,pos09[3]+ (-0.4) }\r\n        }\r\n        b_b6 = {\r\n            label='6', click_function='b6', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ (0.2) ,pos09[2]+ 0 ,pos09[3]+ (-0.4) }\r\n        }\r\n        b_b7 = {\r\n            label='7', click_function='b7', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ (-0.2) ,pos09[2]+ 0 ,pos09[3]+ (-0.6) }\r\n        }\r\n        b_b8 = {\r\n            label='8', click_function='b8', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ 0 ,pos09[2]+ 0 ,pos09[3]+ (-0.6) }\r\n        }\r\n        b_b9 = {\r\n            label='9', click_function='b9', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ (0.2) ,pos09[2]+ 0 ,pos09[3]+ (-0.6) }\r\n        }\r\n        b_reset = {\r\n            label='$0', click_function='br', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ (0.2) ,pos09[2]+ 0 ,pos09[3]+ (0) }\r\n        }\r\n        b_colorReset = {\r\n            label='C', click_function='cr', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ (-0.2) ,pos09[2]+ 0 ,pos09[3]+ (0) }\r\n        }\r\n    end --End NumPad Button Parameters\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "960882"
    },
    {
      "Name": "Custom_Token",
      "Transform": {
        "posX": 2.57746553,
        "posY": 1.06,
        "posZ": 8.945356,
        "rotX": 3.52602356E-08,
        "rotY": 180.0,
        "rotZ": -1.15677832E-08,
        "scaleX": 2.548663,
        "scaleY": 1.0,
        "scaleZ": 2.548663
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "https://d.grancypher.xyz/black-877e425b.png",
        "ImageSecondaryURL": "",
        "WidthScale": 0.0,
        "CustomToken": {
          "Thickness": 0.200000048,
          "MergeDistancePixels": 15.0,
          "Stackable": false
        }
      },
      "XmlUI": "",
      "LuaScript": "function onload()\r\n    --self.createButton(test)\r\n    do --Start Create Buttons\r\n        --button order here determines its index? starting at index 0\r\n        self.createButton(b_display)        --<-index 0\r\n        self.createButton(b_miniDisplay)    --<-index 1\r\n\r\n        self.createButton(b_white)\r\n        self.createButton(b_red)\r\n        self.createButton(b_orange)\r\n        self.createButton(b_yellow)\r\n        self.createButton(b_green)\r\n        self.createButton(b_blue)\r\n        self.createButton(b_purple)\r\n        self.createButton(b_pink)\r\n\r\n        self.createButton(b_PayPlayer)\r\n        self.createButton(b_Request)\r\n        self.createButton(b_PayPlayerMini)\r\n        self.createButton(b_RequestMini)\r\n        self.createButton(b_PayAll)\r\n\r\n        self.createButton(b_b0)\r\n        self.createButton(b_b1)\r\n        self.createButton(b_b2)\r\n        self.createButton(b_b3)\r\n        self.createButton(b_b4)\r\n        self.createButton(b_b5)\r\n        self.createButton(b_b6)\r\n        self.createButton(b_b7)\r\n        self.createButton(b_b8)\r\n        self.createButton(b_b9)\r\n        self.createButton(b_reset)\r\n        self.createButton(b_colorReset)\r\n    end --End Create Buttons\r\n\r\n    do --Start Global VAriables\r\n        pBank_Balance = 0\r\n        colorChoice = nil\r\n        inTransaction = false\r\n\r\n\r\n        pOwner_ttsColor = 'Unclaimed'\r\n        pOwner_Name = 'Unclaimed'\r\n        pBank_GUID = self.get_GUID()\r\n        pOwner = {pOwner_ttsColor,pOwner_Name,pBank_GUID}\r\n\r\n        playerList = {}\r\n\r\n        colorsIndex = 2-1\r\n        buttonsColors = {b_white,b_red,b_orange,b_yellow,b_green,b_blue,b_purple,b_pink}\r\n        posOriginals = {}\r\n\r\n        pOwnerB={'Nobody', 'Nobody', ''}\r\n    end --End Global VAriables\r\n\r\n    get_StartingMoney()\r\n    set_pOwner('Orange') --for debug\r\nend\r\n\r\n--players cannot pay themselves\r\n\r\n--[=====[\r\n    copy/paste for comment block\r\n    status = xpcall( myfunction, myerrorhandler )\r\n    print(status)\r\n--]=====]\r\n\r\n--this get_s updated with global startingMoney upon this objects OnLoad\r\n--using get_StartingMoney\r\n\r\nfunction none()\r\n    --placeholder\r\nend\r\n\r\nfunction myerrorhandler( err )\r\n   print( \"ERROR: \", err )\r\nend\r\nfunction myfunction ()\r\n   n = n/nil\r\nend\r\n\r\n--status = xpcall( myfunction, myerrorhandler )\r\n--print(status)\r\n\r\ndo --Getters\r\n    function get_pOwner()\r\n        return pOwner\r\n    end\r\n\r\n    function get_pBank()\r\n        return true\r\n    end\r\n\r\n    function get_InTransaction()\r\n        return inTransaction\r\n    end\r\n\r\n    function get_StartingMoney()\r\n        pBank_Balance = Global.call('get_StartingMoney')\r\n        b_display.label = '$'..pBank_Balance\r\n        self.editButton(b_display) --updates index 0 button?\r\n    end\r\n\r\n    function get_MiniDisplayAmmount()\r\n        ammount = 0\r\n\r\n        miniLabel = b_miniDisplay.label\r\n        leadSymbol = string.sub(miniLabel,1,1)\r\n\r\n        if (leadSymbol == '+' or leadSymbol =='-') then\r\n            miniLabel = b_miniDisplay.label\r\n            labelNumbers = leadSymbol..string.sub(miniLabel,3)\r\n            ammount = tonumber(labelNumbers)\r\n        end\r\n\r\n        return ammount\r\n    end\r\n\r\n    function set_pOwnerB()\r\n        objList = getAllObjects()\r\n        tempOwnerB ={}\r\n\r\n        for _, obj in pairs(objList) do\r\n            if obj.call('get_pBank') == true then\r\n                tempOwnerB[1],tempOwnerB[2],tempOwnerB[3] =\r\n                    obj.call('get_pOwner')[1],\r\n                    obj.call('get_pOwner')[2],\r\n                    obj.call('get_pOwner')[3]\r\n                if tempOwnerB[1] ~= 'Unclaimed' and tempOwnerB[1] ~= pOwner[1] then\r\n                    if tempOwnerB[1] == colorChoice then\r\n                        pOwnerB = tempOwnerB\r\n                        return true\r\n                    end\r\n                end\r\n            end\r\n        end\r\n    end\r\nend--Getters\r\n\r\nfunction clear_pOwnerB()\r\n    pOwnerB = {'Nobody', 'Nobody', ''}\r\n    colorChoice = nil\r\nend\r\n\r\ndo --Setters\r\nend--setters\r\n\r\ndo --prob uselesss\r\n    function updatePlayerList(clicker_Color)\r\n        for _, player in pairs(playerList) do\r\n            if playerList[_] == clicker_Color then\r\n                return\r\n            elseif _ == #playerList then\r\n                playerList[_+1] = clicker_Color\r\n                for _, player in pairs(playerList) do\r\n                    if _ ~= nil then\r\n                        Player[player].call('updatePlayerList', clicker_Color)\r\n                    end\r\n                end\r\n            end\r\n        end\r\n    end\r\n\r\n    function colorToRGB(clicker_Color)\r\n        for _, colorRGB in pairs(ttsColors) do\r\n            if ttsColors[_][4] == colorSet then\r\n                rgbValue = {ttsColors[1],ttsColors[2],ttsColors[3],1}\r\n                return rgbValue\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\ndo --NumPad Display Interaction\r\n    function b0() b('0') end function b1() b('1') end function b2() b('2') end\r\n    function b3() b('3') end function b4() b('4') end function b5() b('5') end\r\n    function b6() b('6') end function b7() b('7') end function b8() b('8') end\r\n    function b9() b('9') end\r\n    function br() entryZero() end\r\n\r\n    function clear() --clears the b_miniDisplay\r\n        newValue = ''\r\n        b_miniDisplay.label = newValue\r\n        self.editButton({index=1, label=newValue})\r\n    end\r\n\r\n    function b(n)\r\n        checkZero()\r\n        b_miniDisplay.label = b_miniDisplay.label .. n\r\n        newValue = b_miniDisplay.label\r\n        self.editButton({index=1, label=newValue})\r\n    end\r\n\r\n    function checkZero()\r\n        value = b_miniDisplay.label\r\n        if value == \"$0\" then\r\n            b_miniDisplay.label = \"$\"\r\n        elseif value == \"+$0\" then\r\n            b_miniDisplay.label = \"+$\"\r\n        elseif value == \"-$0\" then\r\n            b_miniDisplay.label = \"-$\"\r\n        end\r\n    end\r\n\r\n    function entryZero()\r\n        newValue = \"$0\"\r\n        b_miniDisplay.label = '$0'\r\n        b_miniDisplay.click_function = 'clear'\r\n        self.editButton({index=1, label=newValue})\r\n    end\r\nend --NumPad Display Interaction\r\n\r\ndo --Color Buttons Interaction\r\n    do --Color Buttons Relay\r\n        function white()  p(ttsColors[1],b_white)  end function red()    p(ttsColors[2],b_red)    end\r\n        function orange() p(ttsColors[3],b_orange) end function yellow() p(ttsColors[4],b_yellow) end\r\n        function green()  p(ttsColors[5],b_green)  end function blue()   p(ttsColors[6],b_blue)   end\r\n        function purple() p(ttsColors[7],b_purple) end function pink()   p(ttsColors[8],b_pink)   end\r\n    end --Color Buttons Relay\r\n\r\n    do\r\n        function p(color, button)\r\n            if color[4] ~= pOwner[1] then\r\n                inTransaction = true\r\n                colorChoice = color[4]\r\n                --broadcastToAll(color[4]..'test')\r\n                --broadcastToAll(pOwnerB[1]..'test')\r\n\r\n                --HAVE TO CHECK IF THE COLOR PICKED IS A VALID PLAYER BANK\r\n                if set_pOwnerB() == true then\r\n                    broadcastToAll('test3')\r\n                    b_miniDisplay.color = button.color\r\n                    self.editButton({index=1,color=button.color})\r\n\r\n                    colorsHide()\r\n                end\r\n            elseif color[4] == pOwner[1] then\r\n                message = 'You may not complete a transaction with yourself!'\r\n                --broadcastToColor(message, pOwner[1], pOwner[1])\r\n                broadcastToAll(message)\r\n            end\r\n        end\r\n\r\n        function requestedP(params)\r\n            inTransaction = true\r\n\r\n            pOwnerB, ammount = params[1],params[2]\r\n\r\n            b_miniDisplay.color = pOwnerB[1]\r\n            ammount = '-$'..ammount\r\n            b_miniDisplay.label = ammount\r\n            self.editButton({index=1,label=ammount,color=pOwnerB[1]})\r\n\r\n            colorsHide()\r\n        end\r\n\r\n        function colorsHide()\r\n            for _, buttonColor in pairs(buttonsColors) do\r\n                posCurrent = buttonsColors[_].position\r\n                posOriginals[_] = posCurrent\r\n                posHidden = {posCurrent[1], 0, posCurrent[3]}\r\n\r\n                buttonsColors[_].position = posHidden\r\n                buttonsColors[_].rotation = {180,0,0}\r\n                self.editButton({index=_+colorsIndex, position=posHidden, rotation={180,0,0}})\r\n            end\r\n\r\n            miniShow()\r\n        end\r\n\r\n        function cr()\r\n            colorChoice = nil\r\n            inTransaction = false\r\n            clear_pOwnerB()\r\n            entryZero()\r\n            colorsShow()\r\n        end\r\n\r\n        function colorsShow()\r\n            for _, buttonColor in pairs(buttonsColors) do\r\n                buttonsColors[_].position = posOriginals[_]\r\n                x = posOriginals[_][1]\r\n                z = posOriginals[_][2]\r\n                y = posOriginals[_][3]\r\n                buttonsColors[_].rotation = {0,0,0}\r\n                self.editButton({index=_+ colorsIndex, position={x,z,y}, rotation={0,0,0}})\r\n            end\r\n\r\n            miniHide()\r\n        end\r\n    end\r\n\r\n    function miniShow()\r\n        posMiniShow = {pos00[1]-0, pos00[2], pos00[3]+0.3}\r\n        rotMiniShow = {0,0,0}\r\n        b_miniDisplay.position = posMiniShow\r\n        self.editButton({index=1, position=posMiniShow, rotation=rotMiniShow})\r\n    end\r\n    function miniHide()\r\n        posMiniHide = {pos00[1]-0, 0, pos00[3]+0.3}\r\n        rotMiniHide = {180,0,0}\r\n        b_miniDisplay.position = posMiniHide\r\n        self.editButton({index=1, position=posMiniHide, rotation=rotMiniHide})\r\n    end\r\nend --Color Buttons Interaction\r\n\r\nfunction moneyPayPlayer()\r\n    miniLabel = b_miniDisplay.label\r\n    leadSymbol = string.sub(miniLabel,1,1)\r\n\r\n    if leadSymbol == '$' then\r\n        newValue = '-'..b_miniDisplay.label\r\n        b_miniDisplay.label = newValue\r\n        self.editButton({index=1,label=newValue})\r\n    end\r\n    if leadSymbol == '+' then\r\n        newValue = '-'..string.sub(b_miniDisplay.label,2)\r\n        b_miniDisplay.label = newValue\r\n        self.editButton({index=1,label=newValue})\r\n    end\r\nend\r\n\r\nfunction moneyRequest()\r\n    miniLabel = b_miniDisplay.label\r\n    leadSymbol = string.sub(miniLabel,1,1)\r\n\r\n    if leadSymbol == '$' then\r\n        newValue = '+'..b_miniDisplay.label\r\n        b_miniDisplay.label = newValue\r\n        self.editButton({index=1,label=newValue})\r\n    end\r\n    if leadSymbol == '-' then\r\n        newValue = '+'..string.sub(b_miniDisplay.label,2)\r\n        b_miniDisplay.label = newValue\r\n        self.editButton({index=1,label=newValue})\r\n    end\r\nend\r\n\r\nfunction requestToPlayerB(ammount)\r\n    params = {pOwner, ammount}\r\n    pOwnerBInTrans = pOwnerB[3].call('get_InTransaction')\r\n\r\n    if pOwnerBInTrans == false then\r\n        pOwnerB[3].call('requestedP', params)\r\n\r\n        broadcastAmmount = string.sub(miniLabel,2)\r\n        broadcastToAll(pOwner[2]..' requests ' .. broadcastAmmount..' from '..pOwnerB[2]..'!')\r\n    elseif pOwnerBInTrans == true then\r\n        message = pOwnerB[2]..' is already in a transaction. Please wait.'\r\n        --broadcastToColor(message, pOwner[1], pOwnerB[1])\r\n        broadcastToAll(message)\r\n    end\r\n    --request is either sent or fails\r\n    inTransaction = false\r\n    clear_pOwnerB()\r\nend\r\n\r\nfunction sentPayment(params)\r\n    pOwnerB, sAmmount = params[1], params[2]\r\n\r\n    pBank_Balance = pBank_Balance + sAmmount\r\n    newValue = '$'..tostring(pBank_Balance)\r\n    b_display.label = newValue\r\n    self.editButton({index=0,label=newValue})\r\n\r\n    message = pOwner[2]..' received $'..sAmmount..' from '..pOwnerB[2]\r\n    broadcastToAll(message)\r\nend\r\n\r\nfunction payPlayer(dAmmount)\r\n    params = {pOwner, dAmmount}\r\n\r\n    pOwnerB[3].call('sentPayment',params)\r\n\r\n    message = 'You paid $'..dAmmount..' to '..pOwnerB[2]\r\n    --broadcastToColor(message, pOwner[1], pOwnerB[1])\r\n    broadcastToAll(message)\r\nend\r\n\r\nfunction confirm()\r\n    if pOwnerB[1] ~= 'Nobody' then\r\n        miniLabel = b_miniDisplay.label\r\n        leadSymbol = string.sub(miniLabel,1,1)\r\n\r\n        if (leadSymbol == '+' or leadSymbol =='-') then\r\n            dAmmount = get_MiniDisplayAmmount()\r\n            if leadSymbol == '-' then\r\n                pBank_Balance = pBank_Balance + dAmmount\r\n                newValue = '$'..tostring(pBank_Balance)\r\n                b_display.label = newValue\r\n                self.editButton({index=0,label=newValue})\r\n\r\n                payPlayer(-dAmmount)\r\n            elseif leadSymbol == '+' then\r\n                requestToPlayerB(dAmmount)\r\n            end\r\n            cr()\r\n        end\r\n    end\r\nend\r\n\r\ndo --Main Display\r\n    function bDisplay(obj,clicker_Color,alt_click)\r\n        set_pOwner(clicker_Color)   --player who clicks main display claims the bank\r\n    end\r\n\r\n    function set_pOwner(clicker_Color)\r\n        if pOwner_ttsColor == 'Unclaimed' then\r\n            pOwner_ttsColor = clicker_Color\r\n\r\n            if Player[pOwner_ttsColor].steam_name == nil then\r\n                pOwner_Name = pOwner_ttsColor\r\n            else\r\n                pOwner_Name = Player[pOwner_ttsColor].steam_name\r\n            end\r\n\r\n            pOwner = {pOwner_ttsColor, pOwner_Name, getObjectFromGUID(pBank_GUID)}\r\n\r\n            b_display.color = clicker_Color\r\n            self.editButton({index=0,color=clicker_Color})\r\n\r\n            updatePlayerList(clicker_Color)\r\n        elseif pOwner_ttsColor ~= 'Unclaimed' then\r\n            message = 'This is already owned by '\r\n            --broadcastToColor(message..pOwner_Name, clicker_Color, pOwner_ttsColor)\r\n            broadcastToAll(message)\r\n        end\r\n    end\r\nend --Main Display\r\n\r\ndo\r\n    ttsColors = {\r\n        {1,1,1,'White'}, {0.856, 0.1, 0.094,'Red'}, {0.956, 0.392, 0.113,'Orange'}, {0.905, 0.898, 0.172,'Yellow'},\r\n        {0.192, 0.701, 0.168,'Green'}, {0.118, 0.53, 1,'Blue'}, {0.627, 0.125, 0.941,'Purple'}, {0.96, 0.439, 0.807,'Pink'}\r\n                }\r\n\r\n    --Positions are {x,z,y}\r\n    pos00 = {0,0.1,-1}   --Origin for DISPLAY\r\n    do --Start Display Parameters\r\n        b_display = {\r\n            index=0, label='$---',\r\n            click_function='bDisplay', function_owner=self,\r\n            position={pos00[1]-0, pos00[2], pos00[3]-0},\r\n            width=700, height=100, font_size=100,\r\n            color={1,1,1}\r\n        }\r\n        b_miniDisplay = {\r\n            index=0, label='$0',\r\n            click_function='confirm', function_owner=self,\r\n            position={pos00[1]-0, pos00[2]-pos00[2], pos00[3]+0.3},\r\n            rotation={180,0,0},\r\n            width=300, height=100, font_size=70,\r\n            color={1,1,1}\r\n        }\r\n    end --End Display Parameters\r\n\r\n    pos01 = {-0,0.1,-0}  --Origin for Action Buttons\r\n    do--Start Action Button Parameters\r\n        b_PayPlayer = {\r\n            label='Pay', click_function='moneyPayPlayer', function_owner=self,\r\n            position={pos01[1]-0, pos01[2], pos01[3]-0.3}, width=500, height=100,\r\n            color={1, 1, 1}\r\n        }\r\n\r\n        b_Request = {\r\n            label='Request', click_function='moneyRequest', function_owner=self,\r\n            position={pos01[1]-0, pos01[2], pos01[3]+0}, width=500, height=100,\r\n            color={1, 1, 1}\r\n        }\r\n\r\n        b_PayPlayerMini = {\r\n            click_function='get_MiniDisplayAmmount', function_owner=self,\r\n            position={pos01[1]-0.7, pos01[2], pos01[3]-0.65}, width=200, height=100,\r\n            color={1, 1, 1}\r\n        }\r\n\r\n        b_RequestMini = {\r\n            click_function='none', function_owner=self,\r\n            position={pos01[1]+0.7, pos01[2], pos01[3]-0.65}, width=200, height=100,\r\n            color={1, 1, 1}\r\n        }\r\n\r\n        b_PayAll = {\r\n            click_function='none', function_owner=self,\r\n            position={pos01[1]-0, pos01[2], pos01[3]+0.3}, width=500, height=100,\r\n            color={1, 1, 1}\r\n        }\r\n    end--End Action Button Parameters\r\n\r\n    pos08 = {0,0.1,-0.65} --Origin For Color Buttons\r\n    do --Start Color Button Parameters\r\n        b_white = {\r\n            click_function='white', function_owner=self,\r\n            position={pos08[1]-0.3, pos08[2], pos08[3]-0.1}, width=100, height=100,\r\n            color={1, 1, 1}\r\n        }\r\n\r\n        b_red = {\r\n            click_function='red', function_owner=self,\r\n            position={pos08[1]-0.1, pos08[2], pos08[3]-0.1}, width=100, height=100,\r\n            color={0.856, 0.1, 0.094}\r\n        }\r\n\r\n        b_orange = {\r\n            click_function='orange', function_owner=self,\r\n            position={pos08[1]+0.1, pos08[2], pos08[3]-0.1}, width=100, height=100,\r\n            color={0.956, 0.392, 0.113}\r\n        }\r\n\r\n        b_yellow = {\r\n            click_function='yellow', function_owner=self,\r\n            position={pos08[1]+0.3, pos08[2], pos08[3]-0.1}, width=100, height=100,\r\n            color={0.905, 0.898, 0.172}\r\n        }\r\n        ---------------------------\r\n        b_green = {\r\n            click_function='green', function_owner=self,\r\n            position={pos08[1]-0.3, pos08[2], pos08[3]+0.1}, width=100, height=100,\r\n            color={0.192, 0.701, 0.168}\r\n        }\r\n\r\n        b_blue = {\r\n            click_function='blue', function_owner=self,\r\n            position={pos08[1]-0.1, pos08[2], pos08[3]+0.1}, width=100, height=100,\r\n            color={0.118, 0.53, 1}\r\n        }\r\n\r\n        b_purple = {\r\n            click_function='purple', function_owner=self,\r\n            position={pos08[1]+0.1, pos08[2], pos08[3]+0.1}, width=100, height=100,\r\n            color={0.627, 0.125, 0.941}\r\n        }\r\n\r\n        b_pink = {\r\n            click_function='pink', function_owner=self,\r\n            position={pos08[1]+0.3, pos08[2], pos08[3]+0.1}, width=100, height=100,\r\n            color={0.96, 0.439, 0.807}\r\n        }\r\n    end --End Color Button Parameters\r\n\r\n    --{0,0.1,0.3}\r\n    pos09 = {2,0.1,0}  --Origin For NumPad Buttons\r\n    do --Start NumPad Button Parameters\r\n        b_b0 = {\r\n            label='0', click_function='b0', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ 0 ,pos09[2]+ 0 ,pos09[3]+ 0 },\r\n            rotation={0,0,0}\r\n        }\r\n        b_b1 = {\r\n            label='1', click_function='b1', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ (-0.2) ,pos09[2]+ 0 ,pos09[3]+ (-0.2) }\r\n        }\r\n        b_b2 = {\r\n            label='2', click_function='b2', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ 0 ,pos09[2]+ 0 ,pos09[3]+ (-0.2) }\r\n        }\r\n        b_b3 = {\r\n            label='3', click_function='b3', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ (0.2) ,pos09[2]+ 0 ,pos09[3]+ (-0.2) }\r\n        }\r\n        b_b4 = {\r\n            label='4', click_function='b4', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ (-0.2) ,pos09[2]+ 0 ,pos09[3]+ (-0.4) }\r\n        }\r\n        b_b5 = {\r\n\r\n            label='5', click_function='b5', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ 0 ,pos09[2]+ 0 ,pos09[3]+ (-0.4) }\r\n        }\r\n        b_b6 = {\r\n            label='6', click_function='b6', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ (0.2) ,pos09[2]+ 0 ,pos09[3]+ (-0.4) }\r\n        }\r\n        b_b7 = {\r\n            label='7', click_function='b7', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ (-0.2) ,pos09[2]+ 0 ,pos09[3]+ (-0.6) }\r\n        }\r\n        b_b8 = {\r\n            label='8', click_function='b8', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ 0 ,pos09[2]+ 0 ,pos09[3]+ (-0.6) }\r\n        }\r\n        b_b9 = {\r\n            label='9', click_function='b9', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ (0.2) ,pos09[2]+ 0 ,pos09[3]+ (-0.6) }\r\n        }\r\n        b_reset = {\r\n            label='$0', click_function='br', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ (0.2) ,pos09[2]+ 0 ,pos09[3]+ (0) }\r\n        }\r\n        b_colorReset = {\r\n            label='C', click_function='cr', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ (-0.2) ,pos09[2]+ 0 ,pos09[3]+ (0) }\r\n        }\r\n    end --End NumPad Button Parameters\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "7a2879"
    },
    {
      "Name": "Custom_Token",
      "Transform": {
        "posX": -12.1175308,
        "posY": 1.06,
        "posZ": 8.917659,
        "rotX": -1.20215859E-07,
        "rotY": 180.000015,
        "rotZ": -6.23560936E-08,
        "scaleX": 2.548663,
        "scaleY": 1.0,
        "scaleZ": 2.548663
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "https://d.grancypher.xyz/black-877e425b.png",
        "ImageSecondaryURL": "",
        "WidthScale": 0.0,
        "CustomToken": {
          "Thickness": 0.200000048,
          "MergeDistancePixels": 15.0,
          "Stackable": false
        }
      },
      "XmlUI": "",
      "LuaScript": "function onload()\r\n    --self.createButton(test)\r\n    do --Start Create Buttons\r\n        --button order here determines its index? starting at index 0\r\n        self.createButton(b_display)        --<-index 0\r\n        self.createButton(b_miniDisplay)    --<-index 1\r\n\r\n        self.createButton(b_white)\r\n        self.createButton(b_red)\r\n        self.createButton(b_orange)\r\n        self.createButton(b_yellow)\r\n        self.createButton(b_green)\r\n        self.createButton(b_blue)\r\n        self.createButton(b_purple)\r\n        self.createButton(b_pink)\r\n\r\n        self.createButton(b_PayPlayer)\r\n        self.createButton(b_Request)\r\n        self.createButton(b_PayPlayerMini)\r\n        self.createButton(b_RequestMini)\r\n        self.createButton(b_PayAll)\r\n\r\n        self.createButton(b_b0)\r\n        self.createButton(b_b1)\r\n        self.createButton(b_b2)\r\n        self.createButton(b_b3)\r\n        self.createButton(b_b4)\r\n        self.createButton(b_b5)\r\n        self.createButton(b_b6)\r\n        self.createButton(b_b7)\r\n        self.createButton(b_b8)\r\n        self.createButton(b_b9)\r\n        self.createButton(b_reset)\r\n        self.createButton(b_colorReset)\r\n    end --End Create Buttons\r\n\r\n    do --Start Global VAriables\r\n        pBank_Balance = 0\r\n        colorChoice = nil\r\n        inTransaction = false\r\n\r\n\r\n        pOwner_ttsColor = 'Unclaimed'\r\n        pOwner_Name = 'Unclaimed'\r\n        pBank_GUID = self.get_GUID()\r\n        pOwner = {pOwner_ttsColor,pOwner_Name,pBank_GUID}\r\n\r\n        playerList = {}\r\n\r\n        colorsIndex = 2-1\r\n        buttonsColors = {b_white,b_red,b_orange,b_yellow,b_green,b_blue,b_purple,b_pink}\r\n        posOriginals = {}\r\n\r\n        pOwnerB={'Nobody', 'Nobody', ''}\r\n    end --End Global VAriables\r\n\r\n    get_StartingMoney()\r\n    set_pOwner('Blue') --for debug\r\nend\r\n\r\n--players cannot pay themselves\r\n\r\n--[=====[\r\n    copy/paste for comment block\r\n    status = xpcall( myfunction, myerrorhandler )\r\n    print(status)\r\n--]=====]\r\n\r\n--this get_s updated with global startingMoney upon this objects OnLoad\r\n--using get_StartingMoney\r\n\r\nfunction none()\r\n    --placeholder\r\nend\r\n\r\nfunction myerrorhandler( err )\r\n   print( \"ERROR: \", err )\r\nend\r\nfunction myfunction ()\r\n   n = n/nil\r\nend\r\n\r\n--status = xpcall( myfunction, myerrorhandler )\r\n--print(status)\r\n\r\ndo --Getters\r\n    function get_pOwner()\r\n        return pOwner\r\n    end\r\n\r\n    function get_pBank()\r\n        return true\r\n    end\r\n\r\n    function get_InTransaction()\r\n        return inTransaction\r\n    end\r\n\r\n    function get_StartingMoney()\r\n        pBank_Balance = Global.call('get_StartingMoney')\r\n        b_display.label = '$'..pBank_Balance\r\n        self.editButton(b_display) --updates index 0 button?\r\n    end\r\n\r\n    function get_MiniDisplayAmmount()\r\n        ammount = 0\r\n\r\n        miniLabel = b_miniDisplay.label\r\n        leadSymbol = string.sub(miniLabel,1,1)\r\n\r\n        if (leadSymbol == '+' or leadSymbol =='-') then\r\n            miniLabel = b_miniDisplay.label\r\n            labelNumbers = leadSymbol..string.sub(miniLabel,3)\r\n            ammount = tonumber(labelNumbers)\r\n        end\r\n\r\n        return ammount\r\n    end\r\n\r\n    function set_pOwnerB()\r\n        objList = getAllObjects()\r\n        tempOwnerB ={}\r\n\r\n        for _, obj in pairs(objList) do\r\n            if obj.call('get_pBank') == true then\r\n                tempOwnerB[1],tempOwnerB[2],tempOwnerB[3] =\r\n                    obj.call('get_pOwner')[1],\r\n                    obj.call('get_pOwner')[2],\r\n                    obj.call('get_pOwner')[3]\r\n                if tempOwnerB[1] ~= 'Unclaimed' and tempOwnerB[1] ~= pOwner[1] then\r\n                    if tempOwnerB[1] == colorChoice then\r\n                        pOwnerB = tempOwnerB\r\n                        return true\r\n                    end\r\n                end\r\n            end\r\n        end\r\n    end\r\nend--Getters\r\n\r\nfunction clear_pOwnerB()\r\n    pOwnerB = {'Nobody', 'Nobody', ''}\r\n    colorChoice = nil\r\nend\r\n\r\ndo --Setters\r\nend--setters\r\n\r\ndo --prob uselesss\r\n    function updatePlayerList(clicker_Color)\r\n        for _, player in pairs(playerList) do\r\n            if playerList[_] == clicker_Color then\r\n                return\r\n            elseif _ == #playerList then\r\n                playerList[_+1] = clicker_Color\r\n                for _, player in pairs(playerList) do\r\n                    if _ ~= nil then\r\n                        Player[player].call('updatePlayerList', clicker_Color)\r\n                    end\r\n                end\r\n            end\r\n        end\r\n    end\r\n\r\n    function colorToRGB(clicker_Color)\r\n        for _, colorRGB in pairs(ttsColors) do\r\n            if ttsColors[_][4] == colorSet then\r\n                rgbValue = {ttsColors[1],ttsColors[2],ttsColors[3],1}\r\n                return rgbValue\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\ndo --NumPad Display Interaction\r\n    function b0() b('0') end function b1() b('1') end function b2() b('2') end\r\n    function b3() b('3') end function b4() b('4') end function b5() b('5') end\r\n    function b6() b('6') end function b7() b('7') end function b8() b('8') end\r\n    function b9() b('9') end\r\n    function br() entryZero() end\r\n\r\n    function clear() --clears the b_miniDisplay\r\n        newValue = ''\r\n        b_miniDisplay.label = newValue\r\n        self.editButton({index=1, label=newValue})\r\n    end\r\n\r\n    function b(n)\r\n        checkZero()\r\n        b_miniDisplay.label = b_miniDisplay.label .. n\r\n        newValue = b_miniDisplay.label\r\n        self.editButton({index=1, label=newValue})\r\n    end\r\n\r\n    function checkZero()\r\n        value = b_miniDisplay.label\r\n        if value == \"$0\" then\r\n            b_miniDisplay.label = \"$\"\r\n        elseif value == \"+$0\" then\r\n            b_miniDisplay.label = \"+$\"\r\n        elseif value == \"-$0\" then\r\n            b_miniDisplay.label = \"-$\"\r\n        end\r\n    end\r\n\r\n    function entryZero()\r\n        newValue = \"$0\"\r\n        b_miniDisplay.label = '$0'\r\n        b_miniDisplay.click_function = 'clear'\r\n        self.editButton({index=1, label=newValue})\r\n    end\r\nend --NumPad Display Interaction\r\n\r\ndo --Color Buttons Interaction\r\n    do --Color Buttons Relay\r\n        function white()  p(ttsColors[1],b_white)  end function red()    p(ttsColors[2],b_red)    end\r\n        function orange() p(ttsColors[3],b_orange) end function yellow() p(ttsColors[4],b_yellow) end\r\n        function green()  p(ttsColors[5],b_green)  end function blue()   p(ttsColors[6],b_blue)   end\r\n        function purple() p(ttsColors[7],b_purple) end function pink()   p(ttsColors[8],b_pink)   end\r\n    end --Color Buttons Relay\r\n\r\n    do\r\n        function p(color, button)\r\n            if color[4] ~= pOwner[1] then\r\n                inTransaction = true\r\n                colorChoice = color[4]\r\n                --broadcastToAll(color[4]..'test')\r\n                --broadcastToAll(pOwnerB[1]..'test')\r\n\r\n                --HAVE TO CHECK IF THE COLOR PICKED IS A VALID PLAYER BANK\r\n                if set_pOwnerB() == true then\r\n                    broadcastToAll('test3')\r\n                    b_miniDisplay.color = button.color\r\n                    self.editButton({index=1,color=button.color})\r\n\r\n                    colorsHide()\r\n                end\r\n            elseif color[4] == pOwner[1] then\r\n                message = 'You may not complete a transaction with yourself!'\r\n                --broadcastToColor(message, pOwner[1], pOwner[1])\r\n                broadcastToAll(message)\r\n            end\r\n        end\r\n\r\n        function requestedP(params)\r\n            inTransaction = true\r\n\r\n            pOwnerB, ammount = params[1],params[2]\r\n\r\n            b_miniDisplay.color = pOwnerB[1]\r\n            ammount = '-$'..ammount\r\n            b_miniDisplay.label = ammount\r\n            self.editButton({index=1,label=ammount,color=pOwnerB[1]})\r\n\r\n            colorsHide()\r\n        end\r\n\r\n        function colorsHide()\r\n            for _, buttonColor in pairs(buttonsColors) do\r\n                posCurrent = buttonsColors[_].position\r\n                posOriginals[_] = posCurrent\r\n                posHidden = {posCurrent[1], 0, posCurrent[3]}\r\n\r\n                buttonsColors[_].position = posHidden\r\n                buttonsColors[_].rotation = {180,0,0}\r\n                self.editButton({index=_+colorsIndex, position=posHidden, rotation={180,0,0}})\r\n            end\r\n\r\n            miniShow()\r\n        end\r\n\r\n        function cr()\r\n            colorChoice = nil\r\n            inTransaction = false\r\n            clear_pOwnerB()\r\n            entryZero()\r\n            colorsShow()\r\n        end\r\n\r\n        function colorsShow()\r\n            for _, buttonColor in pairs(buttonsColors) do\r\n                buttonsColors[_].position = posOriginals[_]\r\n                x = posOriginals[_][1]\r\n                z = posOriginals[_][2]\r\n                y = posOriginals[_][3]\r\n                buttonsColors[_].rotation = {0,0,0}\r\n                self.editButton({index=_+ colorsIndex, position={x,z,y}, rotation={0,0,0}})\r\n            end\r\n\r\n            miniHide()\r\n        end\r\n    end\r\n\r\n    function miniShow()\r\n        posMiniShow = {pos00[1]-0, pos00[2], pos00[3]+0.3}\r\n        rotMiniShow = {0,0,0}\r\n        b_miniDisplay.position = posMiniShow\r\n        self.editButton({index=1, position=posMiniShow, rotation=rotMiniShow})\r\n    end\r\n    function miniHide()\r\n        posMiniHide = {pos00[1]-0, 0, pos00[3]+0.3}\r\n        rotMiniHide = {180,0,0}\r\n        b_miniDisplay.position = posMiniHide\r\n        self.editButton({index=1, position=posMiniHide, rotation=rotMiniHide})\r\n    end\r\nend --Color Buttons Interaction\r\n\r\nfunction moneyPayPlayer()\r\n    miniLabel = b_miniDisplay.label\r\n    leadSymbol = string.sub(miniLabel,1,1)\r\n\r\n    if leadSymbol == '$' then\r\n        newValue = '-'..b_miniDisplay.label\r\n        b_miniDisplay.label = newValue\r\n        self.editButton({index=1,label=newValue})\r\n    end\r\n    if leadSymbol == '+' then\r\n        newValue = '-'..string.sub(b_miniDisplay.label,2)\r\n        b_miniDisplay.label = newValue\r\n        self.editButton({index=1,label=newValue})\r\n    end\r\nend\r\n\r\nfunction moneyRequest()\r\n    miniLabel = b_miniDisplay.label\r\n    leadSymbol = string.sub(miniLabel,1,1)\r\n\r\n    if leadSymbol == '$' then\r\n        newValue = '+'..b_miniDisplay.label\r\n        b_miniDisplay.label = newValue\r\n        self.editButton({index=1,label=newValue})\r\n    end\r\n    if leadSymbol == '-' then\r\n        newValue = '+'..string.sub(b_miniDisplay.label,2)\r\n        b_miniDisplay.label = newValue\r\n        self.editButton({index=1,label=newValue})\r\n    end\r\nend\r\n\r\nfunction requestToPlayerB(ammount)\r\n    params = {pOwner, ammount}\r\n    pOwnerBInTrans = pOwnerB[3].call('get_InTransaction')\r\n\r\n    if pOwnerBInTrans == false then\r\n        pOwnerB[3].call('requestedP', params)\r\n\r\n        broadcastAmmount = string.sub(miniLabel,2)\r\n        broadcastToAll(pOwner[2]..' requests ' .. broadcastAmmount..' from '..pOwnerB[2]..'!')\r\n    elseif pOwnerBInTrans == true then\r\n        message = pOwnerB[2]..' is already in a transaction. Please wait.'\r\n        --broadcastToColor(message, pOwner[1], pOwnerB[1])\r\n        broadcastToAll(message)\r\n    end\r\n    --request is either sent or fails\r\n    inTransaction = false\r\n    clear_pOwnerB()\r\nend\r\n\r\nfunction sentPayment(params)\r\n    pOwnerB, sAmmount = params[1], params[2]\r\n\r\n    pBank_Balance = pBank_Balance + sAmmount\r\n    newValue = '$'..tostring(pBank_Balance)\r\n    b_display.label = newValue\r\n    self.editButton({index=0,label=newValue})\r\n\r\n    message = pOwner[2]..' received $'..sAmmount..' from '..pOwnerB[2]\r\n    broadcastToAll(message)\r\nend\r\n\r\nfunction payPlayer(dAmmount)\r\n    params = {pOwner, dAmmount}\r\n\r\n    pOwnerB[3].call('sentPayment',params)\r\n\r\n    message = 'You paid $'..dAmmount..' to '..pOwnerB[2]\r\n    --broadcastToColor(message, pOwner[1], pOwnerB[1])\r\n    broadcastToAll(message)\r\nend\r\n\r\nfunction confirm()\r\n    if pOwnerB[1] ~= 'Nobody' then\r\n        miniLabel = b_miniDisplay.label\r\n        leadSymbol = string.sub(miniLabel,1,1)\r\n\r\n        if (leadSymbol == '+' or leadSymbol =='-') then\r\n            dAmmount = get_MiniDisplayAmmount()\r\n            if leadSymbol == '-' then\r\n                pBank_Balance = pBank_Balance + dAmmount\r\n                newValue = '$'..tostring(pBank_Balance)\r\n                b_display.label = newValue\r\n                self.editButton({index=0,label=newValue})\r\n\r\n                payPlayer(-dAmmount)\r\n            elseif leadSymbol == '+' then\r\n                requestToPlayerB(dAmmount)\r\n            end\r\n            cr()\r\n        end\r\n    end\r\nend\r\n\r\ndo --Main Display\r\n    function bDisplay(obj,clicker_Color,alt_click)\r\n        set_pOwner(clicker_Color)   --player who clicks main display claims the bank\r\n    end\r\n\r\n    function set_pOwner(clicker_Color)\r\n        if pOwner_ttsColor == 'Unclaimed' then\r\n            pOwner_ttsColor = clicker_Color\r\n\r\n            if Player[pOwner_ttsColor].steam_name == nil then\r\n                pOwner_Name = pOwner_ttsColor\r\n            else\r\n                pOwner_Name = Player[pOwner_ttsColor].steam_name\r\n            end\r\n\r\n            pOwner = {pOwner_ttsColor, pOwner_Name, getObjectFromGUID(pBank_GUID)}\r\n\r\n            b_display.color = clicker_Color\r\n            self.editButton({index=0,color=clicker_Color})\r\n\r\n            updatePlayerList(clicker_Color)\r\n        elseif pOwner_ttsColor ~= 'Unclaimed' then\r\n            message = 'This is already owned by '\r\n            --broadcastToColor(message..pOwner_Name, clicker_Color, pOwner_ttsColor)\r\n            broadcastToAll(message)\r\n        end\r\n    end\r\nend --Main Display\r\n\r\ndo\r\n    ttsColors = {\r\n        {1,1,1,'White'}, {0.856, 0.1, 0.094,'Red'}, {0.956, 0.392, 0.113,'Orange'}, {0.905, 0.898, 0.172,'Yellow'},\r\n        {0.192, 0.701, 0.168,'Green'}, {0.118, 0.53, 1,'Blue'}, {0.627, 0.125, 0.941,'Purple'}, {0.96, 0.439, 0.807,'Pink'}\r\n                }\r\n\r\n    --Positions are {x,z,y}\r\n    pos00 = {0,0.1,-1}   --Origin for DISPLAY\r\n    do --Start Display Parameters\r\n        b_display = {\r\n            index=0, label='$---',\r\n            click_function='bDisplay', function_owner=self,\r\n            position={pos00[1]-0, pos00[2], pos00[3]-0},\r\n            width=700, height=100, font_size=100,\r\n            color={1,1,1}\r\n        }\r\n        b_miniDisplay = {\r\n            index=0, label='$0',\r\n            click_function='confirm', function_owner=self,\r\n            position={pos00[1]-0, pos00[2]-pos00[2], pos00[3]+0.3},\r\n            rotation={180,0,0},\r\n            width=300, height=100, font_size=70,\r\n            color={1,1,1}\r\n        }\r\n    end --End Display Parameters\r\n\r\n    pos01 = {-0,0.1,-0}  --Origin for Action Buttons\r\n    do--Start Action Button Parameters\r\n        b_PayPlayer = {\r\n            label='Pay', click_function='moneyPayPlayer', function_owner=self,\r\n            position={pos01[1]-0, pos01[2], pos01[3]-0.3}, width=500, height=100,\r\n            color={1, 1, 1}\r\n        }\r\n\r\n        b_Request = {\r\n            label='Request', click_function='moneyRequest', function_owner=self,\r\n            position={pos01[1]-0, pos01[2], pos01[3]+0}, width=500, height=100,\r\n            color={1, 1, 1}\r\n        }\r\n\r\n        b_PayPlayerMini = {\r\n            click_function='get_MiniDisplayAmmount', function_owner=self,\r\n            position={pos01[1]-0.7, pos01[2], pos01[3]-0.65}, width=200, height=100,\r\n            color={1, 1, 1}\r\n        }\r\n\r\n        b_RequestMini = {\r\n            click_function='none', function_owner=self,\r\n            position={pos01[1]+0.7, pos01[2], pos01[3]-0.65}, width=200, height=100,\r\n            color={1, 1, 1}\r\n        }\r\n\r\n        b_PayAll = {\r\n            click_function='none', function_owner=self,\r\n            position={pos01[1]-0, pos01[2], pos01[3]+0.3}, width=500, height=100,\r\n            color={1, 1, 1}\r\n        }\r\n    end--End Action Button Parameters\r\n\r\n    pos08 = {0,0.1,-0.65} --Origin For Color Buttons\r\n    do --Start Color Button Parameters\r\n        b_white = {\r\n            click_function='white', function_owner=self,\r\n            position={pos08[1]-0.3, pos08[2], pos08[3]-0.1}, width=100, height=100,\r\n            color={1, 1, 1}\r\n        }\r\n\r\n        b_red = {\r\n            click_function='red', function_owner=self,\r\n            position={pos08[1]-0.1, pos08[2], pos08[3]-0.1}, width=100, height=100,\r\n            color={0.856, 0.1, 0.094}\r\n        }\r\n\r\n        b_orange = {\r\n            click_function='orange', function_owner=self,\r\n            position={pos08[1]+0.1, pos08[2], pos08[3]-0.1}, width=100, height=100,\r\n            color={0.956, 0.392, 0.113}\r\n        }\r\n\r\n        b_yellow = {\r\n            click_function='yellow', function_owner=self,\r\n            position={pos08[1]+0.3, pos08[2], pos08[3]-0.1}, width=100, height=100,\r\n            color={0.905, 0.898, 0.172}\r\n        }\r\n        ---------------------------\r\n        b_green = {\r\n            click_function='green', function_owner=self,\r\n            position={pos08[1]-0.3, pos08[2], pos08[3]+0.1}, width=100, height=100,\r\n            color={0.192, 0.701, 0.168}\r\n        }\r\n\r\n        b_blue = {\r\n            click_function='blue', function_owner=self,\r\n            position={pos08[1]-0.1, pos08[2], pos08[3]+0.1}, width=100, height=100,\r\n            color={0.118, 0.53, 1}\r\n        }\r\n\r\n        b_purple = {\r\n            click_function='purple', function_owner=self,\r\n            position={pos08[1]+0.1, pos08[2], pos08[3]+0.1}, width=100, height=100,\r\n            color={0.627, 0.125, 0.941}\r\n        }\r\n\r\n        b_pink = {\r\n            click_function='pink', function_owner=self,\r\n            position={pos08[1]+0.3, pos08[2], pos08[3]+0.1}, width=100, height=100,\r\n            color={0.96, 0.439, 0.807}\r\n        }\r\n    end --End Color Button Parameters\r\n\r\n    --{0,0.1,0.3}\r\n    pos09 = {2,0.1,0}  --Origin For NumPad Buttons\r\n    do --Start NumPad Button Parameters\r\n        b_b0 = {\r\n            label='0', click_function='b0', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ 0 ,pos09[2]+ 0 ,pos09[3]+ 0 },\r\n            rotation={0,0,0}\r\n        }\r\n        b_b1 = {\r\n            label='1', click_function='b1', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ (-0.2) ,pos09[2]+ 0 ,pos09[3]+ (-0.2) }\r\n        }\r\n        b_b2 = {\r\n            label='2', click_function='b2', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ 0 ,pos09[2]+ 0 ,pos09[3]+ (-0.2) }\r\n        }\r\n        b_b3 = {\r\n            label='3', click_function='b3', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ (0.2) ,pos09[2]+ 0 ,pos09[3]+ (-0.2) }\r\n        }\r\n        b_b4 = {\r\n            label='4', click_function='b4', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ (-0.2) ,pos09[2]+ 0 ,pos09[3]+ (-0.4) }\r\n        }\r\n        b_b5 = {\r\n\r\n            label='5', click_function='b5', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ 0 ,pos09[2]+ 0 ,pos09[3]+ (-0.4) }\r\n        }\r\n        b_b6 = {\r\n            label='6', click_function='b6', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ (0.2) ,pos09[2]+ 0 ,pos09[3]+ (-0.4) }\r\n        }\r\n        b_b7 = {\r\n            label='7', click_function='b7', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ (-0.2) ,pos09[2]+ 0 ,pos09[3]+ (-0.6) }\r\n        }\r\n        b_b8 = {\r\n            label='8', click_function='b8', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ 0 ,pos09[2]+ 0 ,pos09[3]+ (-0.6) }\r\n        }\r\n        b_b9 = {\r\n            label='9', click_function='b9', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ (0.2) ,pos09[2]+ 0 ,pos09[3]+ (-0.6) }\r\n        }\r\n        b_reset = {\r\n            label='$0', click_function='br', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ (0.2) ,pos09[2]+ 0 ,pos09[3]+ (0) }\r\n        }\r\n        b_colorReset = {\r\n            label='C', click_function='cr', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ (-0.2) ,pos09[2]+ 0 ,pos09[3]+ (0) }\r\n        }\r\n    end --End NumPad Button Parameters\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "5c1777"
    },
    {
      "Name": "Custom_Token",
      "Transform": {
        "posX": -11.78697,
        "posY": 1.06,
        "posZ": -0.586073339,
        "rotX": -4.094023E-09,
        "rotY": 180.000015,
        "rotZ": -3.48225839E-08,
        "scaleX": 2.548663,
        "scaleY": 1.0,
        "scaleZ": 2.548663
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "https://d.grancypher.xyz/black-877e425b.png",
        "ImageSecondaryURL": "",
        "WidthScale": 0.0,
        "CustomToken": {
          "Thickness": 0.200000048,
          "MergeDistancePixels": 15.0,
          "Stackable": false
        }
      },
      "XmlUI": "",
      "LuaScript": "function onload()\r\n    --self.createButton(test)\r\n    do --Start Create Buttons\r\n        --button order here determines its index? starting at index 0\r\n        self.createButton(b_display)        --<-index 0\r\n        self.createButton(b_miniDisplay)    --<-index 1\r\n\r\n        self.createButton(b_white)\r\n        self.createButton(b_red)\r\n        self.createButton(b_orange)\r\n        self.createButton(b_yellow)\r\n        self.createButton(b_green)\r\n        self.createButton(b_blue)\r\n        self.createButton(b_purple)\r\n        self.createButton(b_pink)\r\n\r\n        self.createButton(b_PayPlayer)\r\n        self.createButton(b_Request)\r\n        self.createButton(b_PayPlayerMini)\r\n        self.createButton(b_RequestMini)\r\n        self.createButton(b_PayAll)\r\n\r\n        self.createButton(b_b0)\r\n        self.createButton(b_b1)\r\n        self.createButton(b_b2)\r\n        self.createButton(b_b3)\r\n        self.createButton(b_b4)\r\n        self.createButton(b_b5)\r\n        self.createButton(b_b6)\r\n        self.createButton(b_b7)\r\n        self.createButton(b_b8)\r\n        self.createButton(b_b9)\r\n        self.createButton(b_reset)\r\n        self.createButton(b_colorReset)\r\n    end --End Create Buttons\r\n\r\n    do --Start Global VAriables\r\n        pBank_Balance = 0\r\n        colorChoice = nil\r\n        inTransaction = false\r\n\r\n\r\n        pOwner_ttsColor = 'Unclaimed'\r\n        pOwner_Name = 'Unclaimed'\r\n        pBank_GUID = self.get_GUID()\r\n        pOwner = {pOwner_ttsColor,pOwner_Name,pBank_GUID}\r\n\r\n        playerList = {}\r\n\r\n        colorsIndex = 2-1\r\n        buttonsColors = {b_white,b_red,b_orange,b_yellow,b_green,b_blue,b_purple,b_pink}\r\n        posOriginals = {}\r\n\r\n        pOwnerB={'Nobody', 'Nobody', ''}\r\n    end --End Global VAriables\r\n\r\n    get_StartingMoney()\r\n    set_pOwner('Yellow') --for debug\r\nend\r\n\r\n--players cannot pay themselves\r\n\r\n--[=====[\r\n    copy/paste for comment block\r\n    status = xpcall( myfunction, myerrorhandler )\r\n    print(status)\r\n--]=====]\r\n\r\n--this get_s updated with global startingMoney upon this objects OnLoad\r\n--using get_StartingMoney\r\n\r\nfunction none()\r\n    --placeholder\r\nend\r\n\r\nfunction myerrorhandler( err )\r\n   print( \"ERROR: \", err )\r\nend\r\nfunction myfunction ()\r\n   n = n/nil\r\nend\r\n\r\n--status = xpcall( myfunction, myerrorhandler )\r\n--print(status)\r\n\r\ndo --Getters\r\n    function get_pOwner()\r\n        return pOwner\r\n    end\r\n\r\n    function get_pBank()\r\n        return true\r\n    end\r\n\r\n    function get_InTransaction()\r\n        return inTransaction\r\n    end\r\n\r\n    function get_StartingMoney()\r\n        pBank_Balance = Global.call('get_StartingMoney')\r\n        b_display.label = '$'..pBank_Balance\r\n        self.editButton(b_display) --updates index 0 button?\r\n    end\r\n\r\n    function get_MiniDisplayAmmount()\r\n        ammount = 0\r\n\r\n        miniLabel = b_miniDisplay.label\r\n        leadSymbol = string.sub(miniLabel,1,1)\r\n\r\n        if (leadSymbol == '+' or leadSymbol =='-') then\r\n            miniLabel = b_miniDisplay.label\r\n            labelNumbers = leadSymbol..string.sub(miniLabel,3)\r\n            ammount = tonumber(labelNumbers)\r\n        end\r\n\r\n        return ammount\r\n    end\r\n\r\n    function set_pOwnerB()\r\n        objList = getAllObjects()\r\n        tempOwnerB ={}\r\n\r\n        for _, obj in pairs(objList) do\r\n            if obj.call('get_pBank') == true then\r\n                tempOwnerB[1],tempOwnerB[2],tempOwnerB[3] =\r\n                    obj.call('get_pOwner')[1],\r\n                    obj.call('get_pOwner')[2],\r\n                    obj.call('get_pOwner')[3]\r\n                if tempOwnerB[1] ~= 'Unclaimed' and tempOwnerB[1] ~= pOwner[1] then\r\n                    if tempOwnerB[1] == colorChoice then\r\n                        pOwnerB = tempOwnerB\r\n                        return true\r\n                    end\r\n                end\r\n            end\r\n        end\r\n    end\r\nend--Getters\r\n\r\nfunction clear_pOwnerB()\r\n    pOwnerB = {'Nobody', 'Nobody', ''}\r\n    colorChoice = nil\r\nend\r\n\r\ndo --Setters\r\nend--setters\r\n\r\ndo --prob uselesss\r\n    function updatePlayerList(clicker_Color)\r\n        for _, player in pairs(playerList) do\r\n            if playerList[_] == clicker_Color then\r\n                return\r\n            elseif _ == #playerList then\r\n                playerList[_+1] = clicker_Color\r\n                for _, player in pairs(playerList) do\r\n                    if _ ~= nil then\r\n                        Player[player].call('updatePlayerList', clicker_Color)\r\n                    end\r\n                end\r\n            end\r\n        end\r\n    end\r\n\r\n    function colorToRGB(clicker_Color)\r\n        for _, colorRGB in pairs(ttsColors) do\r\n            if ttsColors[_][4] == colorSet then\r\n                rgbValue = {ttsColors[1],ttsColors[2],ttsColors[3],1}\r\n                return rgbValue\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\ndo --NumPad Display Interaction\r\n    function b0() b('0') end function b1() b('1') end function b2() b('2') end\r\n    function b3() b('3') end function b4() b('4') end function b5() b('5') end\r\n    function b6() b('6') end function b7() b('7') end function b8() b('8') end\r\n    function b9() b('9') end\r\n    function br() entryZero() end\r\n\r\n    function clear() --clears the b_miniDisplay\r\n        newValue = ''\r\n        b_miniDisplay.label = newValue\r\n        self.editButton({index=1, label=newValue})\r\n    end\r\n\r\n    function b(n)\r\n        checkZero()\r\n        b_miniDisplay.label = b_miniDisplay.label .. n\r\n        newValue = b_miniDisplay.label\r\n        self.editButton({index=1, label=newValue})\r\n    end\r\n\r\n    function checkZero()\r\n        value = b_miniDisplay.label\r\n        if value == \"$0\" then\r\n            b_miniDisplay.label = \"$\"\r\n        elseif value == \"+$0\" then\r\n            b_miniDisplay.label = \"+$\"\r\n        elseif value == \"-$0\" then\r\n            b_miniDisplay.label = \"-$\"\r\n        end\r\n    end\r\n\r\n    function entryZero()\r\n        newValue = \"$0\"\r\n        b_miniDisplay.label = '$0'\r\n        b_miniDisplay.click_function = 'clear'\r\n        self.editButton({index=1, label=newValue})\r\n    end\r\nend --NumPad Display Interaction\r\n\r\ndo --Color Buttons Interaction\r\n    do --Color Buttons Relay\r\n        function white()  p(ttsColors[1],b_white)  end function red()    p(ttsColors[2],b_red)    end\r\n        function orange() p(ttsColors[3],b_orange) end function yellow() p(ttsColors[4],b_yellow) end\r\n        function green()  p(ttsColors[5],b_green)  end function blue()   p(ttsColors[6],b_blue)   end\r\n        function purple() p(ttsColors[7],b_purple) end function pink()   p(ttsColors[8],b_pink)   end\r\n    end --Color Buttons Relay\r\n\r\n    do\r\n        function p(color, button)\r\n            if color[4] ~= pOwner[1] then\r\n                inTransaction = true\r\n                colorChoice = color[4]\r\n                --broadcastToAll(color[4]..'test')\r\n                --broadcastToAll(pOwnerB[1]..'test')\r\n\r\n                --HAVE TO CHECK IF THE COLOR PICKED IS A VALID PLAYER BANK\r\n                if set_pOwnerB() == true then\r\n                    broadcastToAll('test3')\r\n                    b_miniDisplay.color = button.color\r\n                    self.editButton({index=1,color=button.color})\r\n\r\n                    colorsHide()\r\n                end\r\n            elseif color[4] == pOwner[1] then\r\n                message = 'You may not complete a transaction with yourself!'\r\n                --broadcastToColor(message, pOwner[1], pOwner[1])\r\n                broadcastToAll(message)\r\n            end\r\n        end\r\n\r\n        function requestedP(params)\r\n            inTransaction = true\r\n\r\n            pOwnerB, ammount = params[1],params[2]\r\n\r\n            b_miniDisplay.color = pOwnerB[1]\r\n            ammount = '-$'..ammount\r\n            b_miniDisplay.label = ammount\r\n            self.editButton({index=1,label=ammount,color=pOwnerB[1]})\r\n\r\n            colorsHide()\r\n        end\r\n\r\n        function colorsHide()\r\n            for _, buttonColor in pairs(buttonsColors) do\r\n                posCurrent = buttonsColors[_].position\r\n                posOriginals[_] = posCurrent\r\n                posHidden = {posCurrent[1], 0, posCurrent[3]}\r\n\r\n                buttonsColors[_].position = posHidden\r\n                buttonsColors[_].rotation = {180,0,0}\r\n                self.editButton({index=_+colorsIndex, position=posHidden, rotation={180,0,0}})\r\n            end\r\n\r\n            miniShow()\r\n        end\r\n\r\n        function cr()\r\n            colorChoice = nil\r\n            inTransaction = false\r\n            clear_pOwnerB()\r\n            entryZero()\r\n            colorsShow()\r\n        end\r\n\r\n        function colorsShow()\r\n            for _, buttonColor in pairs(buttonsColors) do\r\n                buttonsColors[_].position = posOriginals[_]\r\n                x = posOriginals[_][1]\r\n                z = posOriginals[_][2]\r\n                y = posOriginals[_][3]\r\n                buttonsColors[_].rotation = {0,0,0}\r\n                self.editButton({index=_+ colorsIndex, position={x,z,y}, rotation={0,0,0}})\r\n            end\r\n\r\n            miniHide()\r\n        end\r\n    end\r\n\r\n    function miniShow()\r\n        posMiniShow = {pos00[1]-0, pos00[2], pos00[3]+0.3}\r\n        rotMiniShow = {0,0,0}\r\n        b_miniDisplay.position = posMiniShow\r\n        self.editButton({index=1, position=posMiniShow, rotation=rotMiniShow})\r\n    end\r\n    function miniHide()\r\n        posMiniHide = {pos00[1]-0, 0, pos00[3]+0.3}\r\n        rotMiniHide = {180,0,0}\r\n        b_miniDisplay.position = posMiniHide\r\n        self.editButton({index=1, position=posMiniHide, rotation=rotMiniHide})\r\n    end\r\nend --Color Buttons Interaction\r\n\r\nfunction moneyPayPlayer()\r\n    miniLabel = b_miniDisplay.label\r\n    leadSymbol = string.sub(miniLabel,1,1)\r\n\r\n    if leadSymbol == '$' then\r\n        newValue = '-'..b_miniDisplay.label\r\n        b_miniDisplay.label = newValue\r\n        self.editButton({index=1,label=newValue})\r\n    end\r\n    if leadSymbol == '+' then\r\n        newValue = '-'..string.sub(b_miniDisplay.label,2)\r\n        b_miniDisplay.label = newValue\r\n        self.editButton({index=1,label=newValue})\r\n    end\r\nend\r\n\r\nfunction moneyRequest()\r\n    miniLabel = b_miniDisplay.label\r\n    leadSymbol = string.sub(miniLabel,1,1)\r\n\r\n    if leadSymbol == '$' then\r\n        newValue = '+'..b_miniDisplay.label\r\n        b_miniDisplay.label = newValue\r\n        self.editButton({index=1,label=newValue})\r\n    end\r\n    if leadSymbol == '-' then\r\n        newValue = '+'..string.sub(b_miniDisplay.label,2)\r\n        b_miniDisplay.label = newValue\r\n        self.editButton({index=1,label=newValue})\r\n    end\r\nend\r\n\r\nfunction requestToPlayerB(ammount)\r\n    params = {pOwner, ammount}\r\n    pOwnerBInTrans = pOwnerB[3].call('get_InTransaction')\r\n\r\n    if pOwnerBInTrans == false then\r\n        pOwnerB[3].call('requestedP', params)\r\n\r\n        broadcastAmmount = string.sub(miniLabel,2)\r\n        broadcastToAll(pOwner[2]..' requests ' .. broadcastAmmount..' from '..pOwnerB[2]..'!')\r\n    elseif pOwnerBInTrans == true then\r\n        message = pOwnerB[2]..' is already in a transaction. Please wait.'\r\n        --broadcastToColor(message, pOwner[1], pOwnerB[1])\r\n        broadcastToAll(message)\r\n    end\r\n    --request is either sent or fails\r\n    inTransaction = false\r\n    clear_pOwnerB()\r\nend\r\n\r\nfunction sentPayment(params)\r\n    pOwnerB, sAmmount = params[1], params[2]\r\n\r\n    pBank_Balance = pBank_Balance + sAmmount\r\n    newValue = '$'..tostring(pBank_Balance)\r\n    b_display.label = newValue\r\n    self.editButton({index=0,label=newValue})\r\n\r\n    message = pOwner[2]..' received $'..sAmmount..' from '..pOwnerB[2]\r\n    broadcastToAll(message)\r\nend\r\n\r\nfunction payPlayer(dAmmount)\r\n    params = {pOwner, dAmmount}\r\n\r\n    pOwnerB[3].call('sentPayment',params)\r\n\r\n    message = 'You paid $'..dAmmount..' to '..pOwnerB[2]\r\n    --broadcastToColor(message, pOwner[1], pOwnerB[1])\r\n    broadcastToAll(message)\r\nend\r\n\r\nfunction confirm()\r\n    if pOwnerB[1] ~= 'Nobody' then\r\n        miniLabel = b_miniDisplay.label\r\n        leadSymbol = string.sub(miniLabel,1,1)\r\n\r\n        if (leadSymbol == '+' or leadSymbol =='-') then\r\n            dAmmount = get_MiniDisplayAmmount()\r\n            if leadSymbol == '-' then\r\n                pBank_Balance = pBank_Balance + dAmmount\r\n                newValue = '$'..tostring(pBank_Balance)\r\n                b_display.label = newValue\r\n                self.editButton({index=0,label=newValue})\r\n\r\n                payPlayer(-dAmmount)\r\n            elseif leadSymbol == '+' then\r\n                requestToPlayerB(dAmmount)\r\n            end\r\n            cr()\r\n        end\r\n    end\r\nend\r\n\r\ndo --Main Display\r\n    function bDisplay(obj,clicker_Color,alt_click)\r\n        set_pOwner(clicker_Color)   --player who clicks main display claims the bank\r\n    end\r\n\r\n    function set_pOwner(clicker_Color)\r\n        if pOwner_ttsColor == 'Unclaimed' then\r\n            pOwner_ttsColor = clicker_Color\r\n\r\n            if Player[pOwner_ttsColor].steam_name == nil then\r\n                pOwner_Name = pOwner_ttsColor\r\n            else\r\n                pOwner_Name = Player[pOwner_ttsColor].steam_name\r\n            end\r\n\r\n            pOwner = {pOwner_ttsColor, pOwner_Name, getObjectFromGUID(pBank_GUID)}\r\n\r\n            b_display.color = clicker_Color\r\n            self.editButton({index=0,color=clicker_Color})\r\n\r\n            updatePlayerList(clicker_Color)\r\n        elseif pOwner_ttsColor ~= 'Unclaimed' then\r\n            message = 'This is already owned by '\r\n            --broadcastToColor(message..pOwner_Name, clicker_Color, pOwner_ttsColor)\r\n            broadcastToAll(message)\r\n        end\r\n    end\r\nend --Main Display\r\n\r\ndo\r\n    ttsColors = {\r\n        {1,1,1,'White'}, {0.856, 0.1, 0.094,'Red'}, {0.956, 0.392, 0.113,'Orange'}, {0.905, 0.898, 0.172,'Yellow'},\r\n        {0.192, 0.701, 0.168,'Green'}, {0.118, 0.53, 1,'Blue'}, {0.627, 0.125, 0.941,'Purple'}, {0.96, 0.439, 0.807,'Pink'}\r\n                }\r\n\r\n    --Positions are {x,z,y}\r\n    pos00 = {0,0.1,-1}   --Origin for DISPLAY\r\n    do --Start Display Parameters\r\n        b_display = {\r\n            index=0, label='$---',\r\n            click_function='bDisplay', function_owner=self,\r\n            position={pos00[1]-0, pos00[2], pos00[3]-0},\r\n            width=700, height=100, font_size=100,\r\n            color={1,1,1}\r\n        }\r\n        b_miniDisplay = {\r\n            index=0, label='$0',\r\n            click_function='confirm', function_owner=self,\r\n            position={pos00[1]-0, pos00[2]-pos00[2], pos00[3]+0.3},\r\n            rotation={180,0,0},\r\n            width=300, height=100, font_size=70,\r\n            color={1,1,1}\r\n        }\r\n    end --End Display Parameters\r\n\r\n    pos01 = {-0,0.1,-0}  --Origin for Action Buttons\r\n    do--Start Action Button Parameters\r\n        b_PayPlayer = {\r\n            label='Pay', click_function='moneyPayPlayer', function_owner=self,\r\n            position={pos01[1]-0, pos01[2], pos01[3]-0.3}, width=500, height=100,\r\n            color={1, 1, 1}\r\n        }\r\n\r\n        b_Request = {\r\n            label='Request', click_function='moneyRequest', function_owner=self,\r\n            position={pos01[1]-0, pos01[2], pos01[3]+0}, width=500, height=100,\r\n            color={1, 1, 1}\r\n        }\r\n\r\n        b_PayPlayerMini = {\r\n            click_function='get_MiniDisplayAmmount', function_owner=self,\r\n            position={pos01[1]-0.7, pos01[2], pos01[3]-0.65}, width=200, height=100,\r\n            color={1, 1, 1}\r\n        }\r\n\r\n        b_RequestMini = {\r\n            click_function='none', function_owner=self,\r\n            position={pos01[1]+0.7, pos01[2], pos01[3]-0.65}, width=200, height=100,\r\n            color={1, 1, 1}\r\n        }\r\n\r\n        b_PayAll = {\r\n            click_function='none', function_owner=self,\r\n            position={pos01[1]-0, pos01[2], pos01[3]+0.3}, width=500, height=100,\r\n            color={1, 1, 1}\r\n        }\r\n    end--End Action Button Parameters\r\n\r\n    pos08 = {0,0.1,-0.65} --Origin For Color Buttons\r\n    do --Start Color Button Parameters\r\n        b_white = {\r\n            click_function='white', function_owner=self,\r\n            position={pos08[1]-0.3, pos08[2], pos08[3]-0.1}, width=100, height=100,\r\n            color={1, 1, 1}\r\n        }\r\n\r\n        b_red = {\r\n            click_function='red', function_owner=self,\r\n            position={pos08[1]-0.1, pos08[2], pos08[3]-0.1}, width=100, height=100,\r\n            color={0.856, 0.1, 0.094}\r\n        }\r\n\r\n        b_orange = {\r\n            click_function='orange', function_owner=self,\r\n            position={pos08[1]+0.1, pos08[2], pos08[3]-0.1}, width=100, height=100,\r\n            color={0.956, 0.392, 0.113}\r\n        }\r\n\r\n        b_yellow = {\r\n            click_function='yellow', function_owner=self,\r\n            position={pos08[1]+0.3, pos08[2], pos08[3]-0.1}, width=100, height=100,\r\n            color={0.905, 0.898, 0.172}\r\n        }\r\n        ---------------------------\r\n        b_green = {\r\n            click_function='green', function_owner=self,\r\n            position={pos08[1]-0.3, pos08[2], pos08[3]+0.1}, width=100, height=100,\r\n            color={0.192, 0.701, 0.168}\r\n        }\r\n\r\n        b_blue = {\r\n            click_function='blue', function_owner=self,\r\n            position={pos08[1]-0.1, pos08[2], pos08[3]+0.1}, width=100, height=100,\r\n            color={0.118, 0.53, 1}\r\n        }\r\n\r\n        b_purple = {\r\n            click_function='purple', function_owner=self,\r\n            position={pos08[1]+0.1, pos08[2], pos08[3]+0.1}, width=100, height=100,\r\n            color={0.627, 0.125, 0.941}\r\n        }\r\n\r\n        b_pink = {\r\n            click_function='pink', function_owner=self,\r\n            position={pos08[1]+0.3, pos08[2], pos08[3]+0.1}, width=100, height=100,\r\n            color={0.96, 0.439, 0.807}\r\n        }\r\n    end --End Color Button Parameters\r\n\r\n    --{0,0.1,0.3}\r\n    pos09 = {2,0.1,0}  --Origin For NumPad Buttons\r\n    do --Start NumPad Button Parameters\r\n        b_b0 = {\r\n            label='0', click_function='b0', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ 0 ,pos09[2]+ 0 ,pos09[3]+ 0 },\r\n            rotation={0,0,0}\r\n        }\r\n        b_b1 = {\r\n            label='1', click_function='b1', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ (-0.2) ,pos09[2]+ 0 ,pos09[3]+ (-0.2) }\r\n        }\r\n        b_b2 = {\r\n            label='2', click_function='b2', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ 0 ,pos09[2]+ 0 ,pos09[3]+ (-0.2) }\r\n        }\r\n        b_b3 = {\r\n            label='3', click_function='b3', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ (0.2) ,pos09[2]+ 0 ,pos09[3]+ (-0.2) }\r\n        }\r\n        b_b4 = {\r\n            label='4', click_function='b4', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ (-0.2) ,pos09[2]+ 0 ,pos09[3]+ (-0.4) }\r\n        }\r\n        b_b5 = {\r\n\r\n            label='5', click_function='b5', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ 0 ,pos09[2]+ 0 ,pos09[3]+ (-0.4) }\r\n        }\r\n        b_b6 = {\r\n            label='6', click_function='b6', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ (0.2) ,pos09[2]+ 0 ,pos09[3]+ (-0.4) }\r\n        }\r\n        b_b7 = {\r\n            label='7', click_function='b7', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ (-0.2) ,pos09[2]+ 0 ,pos09[3]+ (-0.6) }\r\n        }\r\n        b_b8 = {\r\n            label='8', click_function='b8', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ 0 ,pos09[2]+ 0 ,pos09[3]+ (-0.6) }\r\n        }\r\n        b_b9 = {\r\n            label='9', click_function='b9', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ (0.2) ,pos09[2]+ 0 ,pos09[3]+ (-0.6) }\r\n        }\r\n        b_reset = {\r\n            label='$0', click_function='br', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ (0.2) ,pos09[2]+ 0 ,pos09[3]+ (0) }\r\n        }\r\n        b_colorReset = {\r\n            label='C', click_function='cr', function_owner=self,\r\n            width=100, height=100, font_size=60,\r\n            position={pos09[1]+ (-0.2) ,pos09[2]+ 0 ,pos09[3]+ (0) }\r\n        }\r\n    end --End NumPad Button Parameters\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "eeab2c"
    }
  ],
  "DecalPallet": [],
  "TabStates": {
    "0": {
      "title": "Rules",
      "body": "",
      "color": "Grey",
      "visibleColor": {
        "r": 0.5,
        "g": 0.5,
        "b": 0.5
      },
      "id": 0
    },
    "1": {
      "title": "White",
      "body": "",
      "color": "White",
      "visibleColor": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "id": 1
    },
    "2": {
      "title": "Brown",
      "body": "",
      "color": "Brown",
      "visibleColor": {
        "r": 0.443,
        "g": 0.231,
        "b": 0.09
      },
      "id": 2
    },
    "3": {
      "title": "Red",
      "body": "",
      "color": "Red",
      "visibleColor": {
        "r": 0.856,
        "g": 0.1,
        "b": 0.094
      },
      "id": 3
    },
    "4": {
      "title": "Orange",
      "body": "",
      "color": "Orange",
      "visibleColor": {
        "r": 0.956,
        "g": 0.392,
        "b": 0.113
      },
      "id": 4
    },
    "5": {
      "title": "Yellow",
      "body": "",
      "color": "Yellow",
      "visibleColor": {
        "r": 0.905,
        "g": 0.898,
        "b": 0.172
      },
      "id": 5
    },
    "6": {
      "title": "Green",
      "body": "",
      "color": "Green",
      "visibleColor": {
        "r": 0.192,
        "g": 0.701,
        "b": 0.168
      },
      "id": 6
    },
    "7": {
      "title": "Blue",
      "body": "",
      "color": "Blue",
      "visibleColor": {
        "r": 0.118,
        "g": 0.53,
        "b": 1.0
      },
      "id": 7
    },
    "8": {
      "title": "Teal",
      "body": "",
      "color": "Teal",
      "visibleColor": {
        "r": 0.129,
        "g": 0.694,
        "b": 0.607
      },
      "id": 8
    },
    "9": {
      "title": "Purple",
      "body": "",
      "color": "Purple",
      "visibleColor": {
        "r": 0.627,
        "g": 0.125,
        "b": 0.941
      },
      "id": 9
    },
    "10": {
      "title": "Pink",
      "body": "",
      "color": "Pink",
      "visibleColor": {
        "r": 0.96,
        "g": 0.439,
        "b": 0.807
      },
      "id": 10
    },
    "11": {
      "title": "Black",
      "body": "",
      "color": "Black",
      "visibleColor": {
        "r": 0.25,
        "g": 0.25,
        "b": 0.25
      },
      "id": 11
    }
  },
  "CameraStates": [
    {
      "Position": {
        "x": -4.998858,
        "y": -26.6174583,
        "z": 6.2516923
      },
      "Rotation": {
        "x": 90.0,
        "y": 359.6668,
        "z": 0.0
      },
      "Distance": 55.846653,
      "Zoomed": false,
      "AbsolutePosition": {
        "x": -4.99886,
        "y": 29.22918,
        "z": 6.25169
      }
    },
    {
      "Position": {
        "x": 5.35472,
        "y": -2.5,
        "z": -2.07807732
      },
      "Rotation": {
        "x": 90.0,
        "y": 359.8334,
        "z": 0.0
      },
      "Distance": 16.0901451,
      "Zoomed": false,
      "AbsolutePosition": {
        "x": 5.354721,
        "y": 13.5901394,
        "z": -2.07807827
      }
    },
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null
  ],
  "VersionNumber": "v12.0.4"
}